"use strict";
/******************************************************************************
 * This file was generated by langium-cli 1.1.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNetworkConnectivityType = exports.NetworkConnectivityType = exports.isMetricType = exports.MetricType = exports.isLiteralExpression = exports.LiteralExpression = exports.isIncludeElementGeneric = exports.IncludeElementGeneric = exports.isFormula = exports.Formula = exports.isForeignKeyOnDeleteType = exports.ForeignKeyOnDeleteType = exports.isFlowElement = exports.FlowElement = exports.isExpression = exports.Expression = exports.isDetailsFormulaOp = exports.DetailsFormulaOp = exports.isDataEntityType = exports.DataEntityType = exports.isDataEntitySubType = exports.DataEntitySubType = exports.isDataEntityGeneric = exports.DataEntityGeneric = exports.isDataEntityClusterType = exports.DataEntityClusterType = exports.isContextElement = exports.ContextElement = exports.isContextDimensionSensorType = exports.ContextDimensionSensorType = exports.isContextDimensionDeviceType = exports.ContextDimensionDeviceType = exports.isContextDimension = exports.ContextDimension = exports.isBehaviorElement = exports.BehaviorElement = exports.isActorType = exports.ActorType = exports.isActiveTaskType = exports.ActiveTaskType = exports.isActiveStructureElement = exports.ActiveStructureElement = exports.isActiveFlowType = exports.ActiveFlowType = exports.isActiveEventType = exports.ActiveEventType = exports.isActiveElement = exports.ActiveElement = exports.isActionType = exports.ActionType = void 0;
exports.isUIEvent = exports.UIEvent = exports.isUIElementEventType = exports.UIElementEventType = exports.isUIElementEventSubType = exports.UIElementEventSubType = exports.isUIElement = exports.UIElement = exports.isUIContainerType = exports.UIContainerType = exports.isUIContainerSubType = exports.UIContainerSubType = exports.isUIComponentType = exports.UIComponentType = exports.isUIComponentSubType = exports.UIComponentSubType = exports.isUIComponentPartType = exports.UIComponentPartType = exports.isUIComponentPartSubType = exports.UIComponentPartSubType = exports.isUICatchingEvent = exports.UICatchingEvent = exports.isUIActionType = exports.UIActionType = exports.isUIActionEventType = exports.UIActionEventType = exports.isTypeExtended = exports.TypeExtended = exports.isSystemType = exports.SystemType = exports.isSystemSubType = exports.SystemSubType = exports.isSystemElement = exports.SystemElement = exports.isSystemConcept = exports.SystemConcept = exports.isStructureElement = exports.StructureElement = exports.isStereotypeType = exports.StereotypeType = exports.isSensorStatusType = exports.SensorStatusType = exports.isScreenSizeCategoryType = exports.ScreenSizeCategoryType = exports.isPassiveStructureElement = exports.PassiveStructureElement = exports.isPackageAbstract = exports.PackageAbstract = exports.isOtherElement = exports.OtherElement = void 0;
exports.isActorTypeExtended = exports.ActorTypeExtended = exports.isActiveTaskTypeOriginal = exports.ActiveTaskTypeOriginal = exports.isActiveTaskTypeExtendedRef = exports.ActiveTaskTypeExtendedRef = exports.isActiveTaskTypeExtended = exports.ActiveTaskTypeExtended = exports.isActiveTask = exports.ActiveTask = exports.isActiveFlowTypeOriginal = exports.ActiveFlowTypeOriginal = exports.isActiveFlowTypeExtendedRef = exports.ActiveFlowTypeExtendedRef = exports.isActiveFlowTypeExtended = exports.ActiveFlowTypeExtended = exports.isActiveFlow = exports.ActiveFlow = exports.isActiveEventTypeOriginal = exports.ActiveEventTypeOriginal = exports.isActiveEventTypeExtendedRef = exports.ActiveEventTypeExtendedRef = exports.isActiveEventTypeExtended = exports.ActiveEventTypeExtended = exports.isActiveEvent = exports.ActiveEvent = exports.isActionTypeOriginal = exports.ActionTypeOriginal = exports.isActionTypeExtendedRef = exports.ActionTypeExtendedRef = exports.isActionTypeExtended = exports.ActionTypeExtended = exports.is_Function = exports._Function = exports.isUserActivityStatusType = exports.UserActivityStatusType = exports.isUseCaseType = exports.UseCaseType = exports.isUIWireframeType = exports.UIWireframeType = exports.isUIThrowingEventType = exports.UIThrowingEventType = exports.isUISystemEventType = exports.UISystemEventType = exports.isUIPortDefinitionType = exports.UIPortDefinitionType = exports.isUIModelElement = exports.UIModelElement = exports.isUIExpression = exports.UIExpression = void 0;
exports.isDataAttributeConstraint = exports.DataAttributeConstraint = exports.isDataAttribute = exports.DataAttribute = exports.isData = exports.Data = exports.isContextVariable = exports.ContextVariable = exports.isContextDimensionSensorTypeOriginal = exports.ContextDimensionSensorTypeOriginal = exports.isContextDimensionSensorTypeExtendedRef = exports.ContextDimensionSensorTypeExtendedRef = exports.isContextDimensionSensorTypeExtended = exports.ContextDimensionSensorTypeExtended = exports.isContextDimensionSensor = exports.ContextDimensionSensor = exports.isContextDimensionDeviceTypeOriginal = exports.ContextDimensionDeviceTypeOriginal = exports.isContextDimensionDeviceTypeExtendedRef = exports.ContextDimensionDeviceTypeExtendedRef = exports.isContextDimensionDeviceTypeExtended = exports.ContextDimensionDeviceTypeExtended = exports.isContextDimensionDevice = exports.ContextDimensionDevice = exports.isContextDimensionActor = exports.ContextDimensionActor = exports.isContext = exports.Context = exports.isComparison = exports.Comparison = exports.isChildDataEntity = exports.ChildDataEntity = exports.isCheck = exports.Check = exports.isBooleanNegation = exports.BooleanNegation = exports.isBooleanLiteral = exports.BooleanLiteral = exports.isBooleanExpression = exports.BooleanExpression = exports.isAttributeValue = exports.AttributeValue = exports.isArithmeticSigned = exports.ArithmeticSigned = exports.isArithmeticFormula = exports.ArithmeticFormula = exports.isActorTypeOriginal = exports.ActorTypeOriginal = exports.isActorTypeExtendedRef = exports.ActorTypeExtendedRef = void 0;
exports.isForeignKeyOnDeleteTypeExtendedRef = exports.ForeignKeyOnDeleteTypeExtendedRef = exports.isForeignKeyOnDeleteTypeExtended = exports.ForeignKeyOnDeleteTypeExtended = exports.isForeignKey = exports.ForeignKey = exports.isEquals = exports.Equals = exports.isDetailsFormula = exports.DetailsFormula = exports.isDataEnumerationElement = exports.DataEnumerationElement = exports.isDataEnumeration = exports.DataEnumeration = exports.isDataEntityTypeOriginal = exports.DataEntityTypeOriginal = exports.isDataEntityTypeExtendedRef = exports.DataEntityTypeExtendedRef = exports.isDataEntityTypeExtended = exports.DataEntityTypeExtended = exports.isDataEntitySubTypeOriginal = exports.DataEntitySubTypeOriginal = exports.isDataEntitySubTypeExtendedRef = exports.DataEntitySubTypeExtendedRef = exports.isDataEntitySubTypeExtended = exports.DataEntitySubTypeExtended = exports.isDataEntityConstraint = exports.DataEntityConstraint = exports.isDataEntityClusterTypeOriginal = exports.DataEntityClusterTypeOriginal = exports.isDataEntityClusterTypeExtendedRef = exports.DataEntityClusterTypeExtendedRef = exports.isDataEntityClusterTypeExtended = exports.DataEntityClusterTypeExtended = exports.isDataEntityCluster = exports.DataEntityCluster = exports.isDataEntity = exports.DataEntity = exports.isDataAttributeValues = exports.DataAttributeValues = exports.isDataAttributeTypeExtended = exports.DataAttributeTypeExtended = exports.isDataAttributeType = exports.DataAttributeType = exports.isDataAttributeTableRow = exports.DataAttributeTableRow = exports.isDataAttributeRefsList = exports.DataAttributeRefsList = exports.isDataAttributeRefs = exports.DataAttributeRefs = void 0;
exports.isRefFlowTo = exports.RefFlowTo = exports.isRefDataEntity = exports.RefDataEntity = exports.isRefActor = exports.RefActor = exports.isRefActiveElement = exports.RefActiveElement = exports.isPlus = exports.Plus = exports.isPackageSystem = exports.PackageSystem = exports.isNullLiteral = exports.NullLiteral = exports.isNetworkConnectivityTypeOriginal = exports.NetworkConnectivityTypeOriginal = exports.isNetworkConnectivityTypeExtendedRef = exports.NetworkConnectivityTypeExtendedRef = exports.isNetworkConnectivityTypeExtended = exports.NetworkConnectivityTypeExtended = exports.isMultiplicity = exports.Multiplicity = exports.isMultiOrDivOrMod = exports.MultiOrDivOrMod = exports.isModel = exports.Model = exports.isMinus = exports.Minus = exports.isMetricTypeOriginal = exports.MetricTypeOriginal = exports.isMetricTypeExtendedRef = exports.MetricTypeExtendedRef = exports.isMetricTypeExtended = exports.MetricTypeExtended = exports.isMembership = exports.Membership = exports.isManyToMany = exports.ManyToMany = exports.isIntegerLiteral = exports.IntegerLiteral = exports.isIncludeSystemElementType = exports.IncludeSystemElementType = exports.isIncludeElement = exports.IncludeElement = exports.isIncludeAll = exports.IncludeAll = exports.isImport = exports.Import = exports.isForeignKeyOnDeleteTypeOriginal = exports.ForeignKeyOnDeleteTypeOriginal = void 0;
exports.isUCExtensionPoint = exports.UCExtensionPoint = exports.isUCExtends = exports.UCExtends = exports.isUCActions = exports.UCActions = exports.isTernaryExpression = exports.TernaryExpression = exports.isTag = exports.Tag = exports.isSystemTypeOriginal = exports.SystemTypeOriginal = exports.isSystemTypeExtendedRef = exports.SystemTypeExtendedRef = exports.isSystemTypeExtended = exports.SystemTypeExtended = exports.isSystemSubTypeOriginal = exports.SystemSubTypeOriginal = exports.isSystemSubTypeExtendedRef = exports.SystemSubTypeExtendedRef = exports.isSystemSubTypeExtended = exports.SystemSubTypeExtended = exports.isSystem = exports.System = exports.isStringLiteral = exports.StringLiteral = exports.isStereotypeTypeOriginal = exports.StereotypeTypeOriginal = exports.isStereotypeTypeExtendedRef = exports.StereotypeTypeExtendedRef = exports.isStereotypeTypeExtended = exports.StereotypeTypeExtended = exports.isStereotype = exports.Stereotype = exports.isSensorStatusTypeOriginal = exports.SensorStatusTypeOriginal = exports.isSensorStatusTypeExtendedRef = exports.SensorStatusTypeExtendedRef = exports.isSensorStatusTypeExtended = exports.SensorStatusTypeExtended = exports.isScreenSizeCategoryTypeOriginal = exports.ScreenSizeCategoryTypeOriginal = exports.isScreenSizeCategoryTypeExtendedRef = exports.ScreenSizeCategoryTypeExtendedRef = exports.isScreenSizeCategoryTypeExtended = exports.ScreenSizeCategoryTypeExtended = exports.isRefUC = exports.RefUC = exports.isRefSystems = exports.RefSystems = void 0;
exports.isUIComponentTypeOriginal = exports.UIComponentTypeOriginal = exports.isUIComponentTypeExtendedRef = exports.UIComponentTypeExtendedRef = exports.isUIComponentTypeExtended = exports.UIComponentTypeExtended = exports.isUIComponentSubTypeOriginal = exports.UIComponentSubTypeOriginal = exports.isUIComponentSubTypeExtendedRef = exports.UIComponentSubTypeExtendedRef = exports.isUIComponentSubTypeExtended = exports.UIComponentSubTypeExtended = exports.isUIComponentRef = exports.UIComponentRef = exports.isUIComponentPartTypeOriginal = exports.UIComponentPartTypeOriginal = exports.isUIComponentPartTypeExtendedRef = exports.UIComponentPartTypeExtendedRef = exports.isUIComponentPartTypeExtended = exports.UIComponentPartTypeExtended = exports.isUIComponentPartSubTypeOriginal = exports.UIComponentPartSubTypeOriginal = exports.isUIComponentPartSubTypeExtendedRef = exports.UIComponentPartSubTypeExtendedRef = exports.isUIComponentPartSubTypeExtended = exports.UIComponentPartSubTypeExtended = exports.isUIComponentPart = exports.UIComponentPart = exports.isUIComponent = exports.UIComponent = exports.isUIActionTypeOriginal = exports.UIActionTypeOriginal = exports.isUIActionTypeExtendedRef = exports.UIActionTypeExtendedRef = exports.isUIActionTypeExtended = exports.UIActionTypeExtended = exports.isUIActionEventTypeOriginal = exports.UIActionEventTypeOriginal = exports.isUIActionEventTypeExtendedRef = exports.UIActionEventTypeExtendedRef = exports.isUIActionEventTypeExtended = exports.UIActionEventTypeExtended = exports.isUIActionEvent = exports.UIActionEvent = exports.isUIAction = exports.UIAction = exports.isUCIncludes = exports.UCIncludes = exports.isUCExtensionPoints = exports.UCExtensionPoints = void 0;
exports.isUISystemEventTypeExtended = exports.UISystemEventTypeExtended = exports.isUISystemEvent = exports.UISystemEvent = exports.isUISimpleExpression = exports.UISimpleExpression = exports.isUIPortDefinitionTypeOriginal = exports.UIPortDefinitionTypeOriginal = exports.isUIPortDefinitionTypeExtendedRef = exports.UIPortDefinitionTypeExtendedRef = exports.isUIPortDefinitionTypeExtended = exports.UIPortDefinitionTypeExtended = exports.isUIPortDefinition = exports.UIPortDefinition = exports.isUIParameterBindingGroup = exports.UIParameterBindingGroup = exports.isUIParameterBinding = exports.UIParameterBinding = exports.isUIParameter = exports.UIParameter = exports.isUIElementEventTypeOriginal = exports.UIElementEventTypeOriginal = exports.isUIElementEventTypeExtendedRef = exports.UIElementEventTypeExtendedRef = exports.isUIElementEventTypeExtended = exports.UIElementEventTypeExtended = exports.isUIElementEventSubTypeOriginal = exports.UIElementEventSubTypeOriginal = exports.isUIElementEventSubTypeExtendedRef = exports.UIElementEventSubTypeExtendedRef = exports.isUIElementEventSubTypeExtended = exports.UIElementEventSubTypeExtended = exports.isUIElementEvent = exports.UIElementEvent = exports.isUIContextExpression = exports.UIContextExpression = exports.isUIContainerTypeOriginal = exports.UIContainerTypeOriginal = exports.isUIContainerTypeExtendedRef = exports.UIContainerTypeExtendedRef = exports.isUIContainerTypeExtended = exports.UIContainerTypeExtended = exports.isUIContainerSubTypeOriginal = exports.UIContainerSubTypeOriginal = exports.isUIContainerSubTypeExtendedRef = exports.UIContainerSubTypeExtendedRef = exports.isUIContainerSubTypeExtended = exports.UIContainerSubTypeExtended = exports.isUIContainer = exports.UIContainer = void 0;
exports.isDataEnumerationRef = exports.DataEnumerationRef = exports.isDataAttributeTypeOriginal = exports.DataAttributeTypeOriginal = exports.isDataAttributeTypeExtendedRef = exports.DataAttributeTypeExtendedRef = exports.isMonth = exports.Month = exports.is_Date = exports.Percentage = exports.DoubleOrInt = exports._Date = exports.isVariable = exports.Variable = exports.isUserActivityStatusTypeOriginal = exports.UserActivityStatusTypeOriginal = exports.isUserActivityStatusTypeExtendedRef = exports.UserActivityStatusTypeExtendedRef = exports.isUserActivityStatusTypeExtended = exports.UserActivityStatusTypeExtended = exports.isUseCaseTypeOriginal = exports.UseCaseTypeOriginal = exports.isUseCaseTypeExtendedRef = exports.UseCaseTypeExtendedRef = exports.isUseCaseTypeExtended = exports.UseCaseTypeExtended = exports.isUseCase = exports.UseCase = exports.isUpdateFields = exports.UpdateFields = exports.isUpdateField = exports.UpdateField = exports.isUIWireframeTypeOriginal = exports.UIWireframeTypeOriginal = exports.isUIWireframeTypeExtendedRef = exports.UIWireframeTypeExtendedRef = exports.isUIWireframeTypeExtended = exports.UIWireframeTypeExtended = exports.isUIThrowingEventTypeOriginal = exports.UIThrowingEventTypeOriginal = exports.isUIThrowingEventTypeExtendedRef = exports.UIThrowingEventTypeExtendedRef = exports.isUIThrowingEventTypeExtended = exports.UIThrowingEventTypeExtended = exports.isUIThrowingEvent = exports.UIThrowingEvent = exports.isUISystemEventTypeOriginal = exports.UISystemEventTypeOriginal = exports.isUISystemEventTypeExtendedRef = exports.UISystemEventTypeExtendedRef = void 0;
exports.reflection = exports.AslAstReflection = exports.isVariableReference = exports.VariableReference = exports.isFunctionReference = exports.FunctionReference = void 0;
/* eslint-disable */
const langium_1 = require("langium");
exports.ActionType = 'ActionType';
function isActionType(item) {
    return exports.reflection.isInstance(item, exports.ActionType);
}
exports.isActionType = isActionType;
exports.ActiveElement = 'ActiveElement';
function isActiveElement(item) {
    return exports.reflection.isInstance(item, exports.ActiveElement);
}
exports.isActiveElement = isActiveElement;
exports.ActiveEventType = 'ActiveEventType';
function isActiveEventType(item) {
    return exports.reflection.isInstance(item, exports.ActiveEventType);
}
exports.isActiveEventType = isActiveEventType;
exports.ActiveFlowType = 'ActiveFlowType';
function isActiveFlowType(item) {
    return exports.reflection.isInstance(item, exports.ActiveFlowType);
}
exports.isActiveFlowType = isActiveFlowType;
exports.ActiveStructureElement = 'ActiveStructureElement';
function isActiveStructureElement(item) {
    return exports.reflection.isInstance(item, exports.ActiveStructureElement);
}
exports.isActiveStructureElement = isActiveStructureElement;
exports.ActiveTaskType = 'ActiveTaskType';
function isActiveTaskType(item) {
    return exports.reflection.isInstance(item, exports.ActiveTaskType);
}
exports.isActiveTaskType = isActiveTaskType;
exports.ActorType = 'ActorType';
function isActorType(item) {
    return exports.reflection.isInstance(item, exports.ActorType);
}
exports.isActorType = isActorType;
exports.BehaviorElement = 'BehaviorElement';
function isBehaviorElement(item) {
    return exports.reflection.isInstance(item, exports.BehaviorElement);
}
exports.isBehaviorElement = isBehaviorElement;
exports.ContextDimension = 'ContextDimension';
function isContextDimension(item) {
    return exports.reflection.isInstance(item, exports.ContextDimension);
}
exports.isContextDimension = isContextDimension;
exports.ContextDimensionDeviceType = 'ContextDimensionDeviceType';
function isContextDimensionDeviceType(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionDeviceType);
}
exports.isContextDimensionDeviceType = isContextDimensionDeviceType;
exports.ContextDimensionSensorType = 'ContextDimensionSensorType';
function isContextDimensionSensorType(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionSensorType);
}
exports.isContextDimensionSensorType = isContextDimensionSensorType;
exports.ContextElement = 'ContextElement';
function isContextElement(item) {
    return exports.reflection.isInstance(item, exports.ContextElement);
}
exports.isContextElement = isContextElement;
exports.DataEntityClusterType = 'DataEntityClusterType';
function isDataEntityClusterType(item) {
    return exports.reflection.isInstance(item, exports.DataEntityClusterType);
}
exports.isDataEntityClusterType = isDataEntityClusterType;
exports.DataEntityGeneric = 'DataEntityGeneric';
function isDataEntityGeneric(item) {
    return exports.reflection.isInstance(item, exports.DataEntityGeneric);
}
exports.isDataEntityGeneric = isDataEntityGeneric;
exports.DataEntitySubType = 'DataEntitySubType';
function isDataEntitySubType(item) {
    return exports.reflection.isInstance(item, exports.DataEntitySubType);
}
exports.isDataEntitySubType = isDataEntitySubType;
exports.DataEntityType = 'DataEntityType';
function isDataEntityType(item) {
    return exports.reflection.isInstance(item, exports.DataEntityType);
}
exports.isDataEntityType = isDataEntityType;
exports.DetailsFormulaOp = 'DetailsFormulaOp';
function isDetailsFormulaOp(item) {
    return exports.reflection.isInstance(item, exports.DetailsFormulaOp);
}
exports.isDetailsFormulaOp = isDetailsFormulaOp;
exports.Expression = 'Expression';
function isExpression(item) {
    return exports.reflection.isInstance(item, exports.Expression);
}
exports.isExpression = isExpression;
exports.FlowElement = 'FlowElement';
function isFlowElement(item) {
    return exports.reflection.isInstance(item, exports.FlowElement);
}
exports.isFlowElement = isFlowElement;
exports.ForeignKeyOnDeleteType = 'ForeignKeyOnDeleteType';
function isForeignKeyOnDeleteType(item) {
    return exports.reflection.isInstance(item, exports.ForeignKeyOnDeleteType);
}
exports.isForeignKeyOnDeleteType = isForeignKeyOnDeleteType;
exports.Formula = 'Formula';
function isFormula(item) {
    return exports.reflection.isInstance(item, exports.Formula);
}
exports.isFormula = isFormula;
exports.IncludeElementGeneric = 'IncludeElementGeneric';
function isIncludeElementGeneric(item) {
    return exports.reflection.isInstance(item, exports.IncludeElementGeneric);
}
exports.isIncludeElementGeneric = isIncludeElementGeneric;
exports.LiteralExpression = 'LiteralExpression';
function isLiteralExpression(item) {
    return exports.reflection.isInstance(item, exports.LiteralExpression);
}
exports.isLiteralExpression = isLiteralExpression;
exports.MetricType = 'MetricType';
function isMetricType(item) {
    return exports.reflection.isInstance(item, exports.MetricType);
}
exports.isMetricType = isMetricType;
exports.NetworkConnectivityType = 'NetworkConnectivityType';
function isNetworkConnectivityType(item) {
    return exports.reflection.isInstance(item, exports.NetworkConnectivityType);
}
exports.isNetworkConnectivityType = isNetworkConnectivityType;
exports.OtherElement = 'OtherElement';
function isOtherElement(item) {
    return exports.reflection.isInstance(item, exports.OtherElement);
}
exports.isOtherElement = isOtherElement;
exports.PackageAbstract = 'PackageAbstract';
function isPackageAbstract(item) {
    return exports.reflection.isInstance(item, exports.PackageAbstract);
}
exports.isPackageAbstract = isPackageAbstract;
exports.PassiveStructureElement = 'PassiveStructureElement';
function isPassiveStructureElement(item) {
    return exports.reflection.isInstance(item, exports.PassiveStructureElement);
}
exports.isPassiveStructureElement = isPassiveStructureElement;
exports.ScreenSizeCategoryType = 'ScreenSizeCategoryType';
function isScreenSizeCategoryType(item) {
    return exports.reflection.isInstance(item, exports.ScreenSizeCategoryType);
}
exports.isScreenSizeCategoryType = isScreenSizeCategoryType;
exports.SensorStatusType = 'SensorStatusType';
function isSensorStatusType(item) {
    return exports.reflection.isInstance(item, exports.SensorStatusType);
}
exports.isSensorStatusType = isSensorStatusType;
exports.StereotypeType = 'StereotypeType';
function isStereotypeType(item) {
    return exports.reflection.isInstance(item, exports.StereotypeType);
}
exports.isStereotypeType = isStereotypeType;
exports.StructureElement = 'StructureElement';
function isStructureElement(item) {
    return exports.reflection.isInstance(item, exports.StructureElement);
}
exports.isStructureElement = isStructureElement;
exports.SystemConcept = 'SystemConcept';
function isSystemConcept(item) {
    return exports.reflection.isInstance(item, exports.SystemConcept);
}
exports.isSystemConcept = isSystemConcept;
exports.SystemElement = 'SystemElement';
function isSystemElement(item) {
    return exports.reflection.isInstance(item, exports.SystemElement);
}
exports.isSystemElement = isSystemElement;
exports.SystemSubType = 'SystemSubType';
function isSystemSubType(item) {
    return exports.reflection.isInstance(item, exports.SystemSubType);
}
exports.isSystemSubType = isSystemSubType;
exports.SystemType = 'SystemType';
function isSystemType(item) {
    return exports.reflection.isInstance(item, exports.SystemType);
}
exports.isSystemType = isSystemType;
exports.TypeExtended = 'TypeExtended';
function isTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.TypeExtended);
}
exports.isTypeExtended = isTypeExtended;
exports.UIActionEventType = 'UIActionEventType';
function isUIActionEventType(item) {
    return exports.reflection.isInstance(item, exports.UIActionEventType);
}
exports.isUIActionEventType = isUIActionEventType;
exports.UIActionType = 'UIActionType';
function isUIActionType(item) {
    return exports.reflection.isInstance(item, exports.UIActionType);
}
exports.isUIActionType = isUIActionType;
exports.UICatchingEvent = 'UICatchingEvent';
function isUICatchingEvent(item) {
    return exports.reflection.isInstance(item, exports.UICatchingEvent);
}
exports.isUICatchingEvent = isUICatchingEvent;
exports.UIComponentPartSubType = 'UIComponentPartSubType';
function isUIComponentPartSubType(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPartSubType);
}
exports.isUIComponentPartSubType = isUIComponentPartSubType;
exports.UIComponentPartType = 'UIComponentPartType';
function isUIComponentPartType(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPartType);
}
exports.isUIComponentPartType = isUIComponentPartType;
exports.UIComponentSubType = 'UIComponentSubType';
function isUIComponentSubType(item) {
    return exports.reflection.isInstance(item, exports.UIComponentSubType);
}
exports.isUIComponentSubType = isUIComponentSubType;
exports.UIComponentType = 'UIComponentType';
function isUIComponentType(item) {
    return exports.reflection.isInstance(item, exports.UIComponentType);
}
exports.isUIComponentType = isUIComponentType;
exports.UIContainerSubType = 'UIContainerSubType';
function isUIContainerSubType(item) {
    return exports.reflection.isInstance(item, exports.UIContainerSubType);
}
exports.isUIContainerSubType = isUIContainerSubType;
exports.UIContainerType = 'UIContainerType';
function isUIContainerType(item) {
    return exports.reflection.isInstance(item, exports.UIContainerType);
}
exports.isUIContainerType = isUIContainerType;
exports.UIElement = 'UIElement';
function isUIElement(item) {
    return exports.reflection.isInstance(item, exports.UIElement);
}
exports.isUIElement = isUIElement;
exports.UIElementEventSubType = 'UIElementEventSubType';
function isUIElementEventSubType(item) {
    return exports.reflection.isInstance(item, exports.UIElementEventSubType);
}
exports.isUIElementEventSubType = isUIElementEventSubType;
exports.UIElementEventType = 'UIElementEventType';
function isUIElementEventType(item) {
    return exports.reflection.isInstance(item, exports.UIElementEventType);
}
exports.isUIElementEventType = isUIElementEventType;
exports.UIEvent = 'UIEvent';
function isUIEvent(item) {
    return exports.reflection.isInstance(item, exports.UIEvent);
}
exports.isUIEvent = isUIEvent;
exports.UIExpression = 'UIExpression';
function isUIExpression(item) {
    return exports.reflection.isInstance(item, exports.UIExpression);
}
exports.isUIExpression = isUIExpression;
exports.UIModelElement = 'UIModelElement';
function isUIModelElement(item) {
    return exports.reflection.isInstance(item, exports.UIModelElement);
}
exports.isUIModelElement = isUIModelElement;
exports.UIPortDefinitionType = 'UIPortDefinitionType';
function isUIPortDefinitionType(item) {
    return exports.reflection.isInstance(item, exports.UIPortDefinitionType);
}
exports.isUIPortDefinitionType = isUIPortDefinitionType;
exports.UISystemEventType = 'UISystemEventType';
function isUISystemEventType(item) {
    return exports.reflection.isInstance(item, exports.UISystemEventType);
}
exports.isUISystemEventType = isUISystemEventType;
exports.UIThrowingEventType = 'UIThrowingEventType';
function isUIThrowingEventType(item) {
    return exports.reflection.isInstance(item, exports.UIThrowingEventType);
}
exports.isUIThrowingEventType = isUIThrowingEventType;
exports.UIWireframeType = 'UIWireframeType';
function isUIWireframeType(item) {
    return exports.reflection.isInstance(item, exports.UIWireframeType);
}
exports.isUIWireframeType = isUIWireframeType;
exports.UseCaseType = 'UseCaseType';
function isUseCaseType(item) {
    return exports.reflection.isInstance(item, exports.UseCaseType);
}
exports.isUseCaseType = isUseCaseType;
exports.UserActivityStatusType = 'UserActivityStatusType';
function isUserActivityStatusType(item) {
    return exports.reflection.isInstance(item, exports.UserActivityStatusType);
}
exports.isUserActivityStatusType = isUserActivityStatusType;
exports._Function = '_Function';
function is_Function(item) {
    return exports.reflection.isInstance(item, exports._Function);
}
exports.is_Function = is_Function;
exports.ActionTypeExtended = 'ActionTypeExtended';
function isActionTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ActionTypeExtended);
}
exports.isActionTypeExtended = isActionTypeExtended;
exports.ActionTypeExtendedRef = 'ActionTypeExtendedRef';
function isActionTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ActionTypeExtendedRef);
}
exports.isActionTypeExtendedRef = isActionTypeExtendedRef;
exports.ActionTypeOriginal = 'ActionTypeOriginal';
function isActionTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ActionTypeOriginal);
}
exports.isActionTypeOriginal = isActionTypeOriginal;
exports.ActiveEvent = 'ActiveEvent';
function isActiveEvent(item) {
    return exports.reflection.isInstance(item, exports.ActiveEvent);
}
exports.isActiveEvent = isActiveEvent;
exports.ActiveEventTypeExtended = 'ActiveEventTypeExtended';
function isActiveEventTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ActiveEventTypeExtended);
}
exports.isActiveEventTypeExtended = isActiveEventTypeExtended;
exports.ActiveEventTypeExtendedRef = 'ActiveEventTypeExtendedRef';
function isActiveEventTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ActiveEventTypeExtendedRef);
}
exports.isActiveEventTypeExtendedRef = isActiveEventTypeExtendedRef;
exports.ActiveEventTypeOriginal = 'ActiveEventTypeOriginal';
function isActiveEventTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ActiveEventTypeOriginal);
}
exports.isActiveEventTypeOriginal = isActiveEventTypeOriginal;
exports.ActiveFlow = 'ActiveFlow';
function isActiveFlow(item) {
    return exports.reflection.isInstance(item, exports.ActiveFlow);
}
exports.isActiveFlow = isActiveFlow;
exports.ActiveFlowTypeExtended = 'ActiveFlowTypeExtended';
function isActiveFlowTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ActiveFlowTypeExtended);
}
exports.isActiveFlowTypeExtended = isActiveFlowTypeExtended;
exports.ActiveFlowTypeExtendedRef = 'ActiveFlowTypeExtendedRef';
function isActiveFlowTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ActiveFlowTypeExtendedRef);
}
exports.isActiveFlowTypeExtendedRef = isActiveFlowTypeExtendedRef;
exports.ActiveFlowTypeOriginal = 'ActiveFlowTypeOriginal';
function isActiveFlowTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ActiveFlowTypeOriginal);
}
exports.isActiveFlowTypeOriginal = isActiveFlowTypeOriginal;
exports.ActiveTask = 'ActiveTask';
function isActiveTask(item) {
    return exports.reflection.isInstance(item, exports.ActiveTask);
}
exports.isActiveTask = isActiveTask;
exports.ActiveTaskTypeExtended = 'ActiveTaskTypeExtended';
function isActiveTaskTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ActiveTaskTypeExtended);
}
exports.isActiveTaskTypeExtended = isActiveTaskTypeExtended;
exports.ActiveTaskTypeExtendedRef = 'ActiveTaskTypeExtendedRef';
function isActiveTaskTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ActiveTaskTypeExtendedRef);
}
exports.isActiveTaskTypeExtendedRef = isActiveTaskTypeExtendedRef;
exports.ActiveTaskTypeOriginal = 'ActiveTaskTypeOriginal';
function isActiveTaskTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ActiveTaskTypeOriginal);
}
exports.isActiveTaskTypeOriginal = isActiveTaskTypeOriginal;
exports.ActorTypeExtended = 'ActorTypeExtended';
function isActorTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ActorTypeExtended);
}
exports.isActorTypeExtended = isActorTypeExtended;
exports.ActorTypeExtendedRef = 'ActorTypeExtendedRef';
function isActorTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ActorTypeExtendedRef);
}
exports.isActorTypeExtendedRef = isActorTypeExtendedRef;
exports.ActorTypeOriginal = 'ActorTypeOriginal';
function isActorTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ActorTypeOriginal);
}
exports.isActorTypeOriginal = isActorTypeOriginal;
exports.ArithmeticFormula = 'ArithmeticFormula';
function isArithmeticFormula(item) {
    return exports.reflection.isInstance(item, exports.ArithmeticFormula);
}
exports.isArithmeticFormula = isArithmeticFormula;
exports.ArithmeticSigned = 'ArithmeticSigned';
function isArithmeticSigned(item) {
    return exports.reflection.isInstance(item, exports.ArithmeticSigned);
}
exports.isArithmeticSigned = isArithmeticSigned;
exports.AttributeValue = 'AttributeValue';
function isAttributeValue(item) {
    return exports.reflection.isInstance(item, exports.AttributeValue);
}
exports.isAttributeValue = isAttributeValue;
exports.BooleanExpression = 'BooleanExpression';
function isBooleanExpression(item) {
    return exports.reflection.isInstance(item, exports.BooleanExpression);
}
exports.isBooleanExpression = isBooleanExpression;
exports.BooleanLiteral = 'BooleanLiteral';
function isBooleanLiteral(item) {
    return exports.reflection.isInstance(item, exports.BooleanLiteral);
}
exports.isBooleanLiteral = isBooleanLiteral;
exports.BooleanNegation = 'BooleanNegation';
function isBooleanNegation(item) {
    return exports.reflection.isInstance(item, exports.BooleanNegation);
}
exports.isBooleanNegation = isBooleanNegation;
exports.Check = 'Check';
function isCheck(item) {
    return exports.reflection.isInstance(item, exports.Check);
}
exports.isCheck = isCheck;
exports.ChildDataEntity = 'ChildDataEntity';
function isChildDataEntity(item) {
    return exports.reflection.isInstance(item, exports.ChildDataEntity);
}
exports.isChildDataEntity = isChildDataEntity;
exports.Comparison = 'Comparison';
function isComparison(item) {
    return exports.reflection.isInstance(item, exports.Comparison);
}
exports.isComparison = isComparison;
exports.Context = 'Context';
function isContext(item) {
    return exports.reflection.isInstance(item, exports.Context);
}
exports.isContext = isContext;
exports.ContextDimensionActor = 'ContextDimensionActor';
function isContextDimensionActor(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionActor);
}
exports.isContextDimensionActor = isContextDimensionActor;
exports.ContextDimensionDevice = 'ContextDimensionDevice';
function isContextDimensionDevice(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionDevice);
}
exports.isContextDimensionDevice = isContextDimensionDevice;
exports.ContextDimensionDeviceTypeExtended = 'ContextDimensionDeviceTypeExtended';
function isContextDimensionDeviceTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionDeviceTypeExtended);
}
exports.isContextDimensionDeviceTypeExtended = isContextDimensionDeviceTypeExtended;
exports.ContextDimensionDeviceTypeExtendedRef = 'ContextDimensionDeviceTypeExtendedRef';
function isContextDimensionDeviceTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionDeviceTypeExtendedRef);
}
exports.isContextDimensionDeviceTypeExtendedRef = isContextDimensionDeviceTypeExtendedRef;
exports.ContextDimensionDeviceTypeOriginal = 'ContextDimensionDeviceTypeOriginal';
function isContextDimensionDeviceTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionDeviceTypeOriginal);
}
exports.isContextDimensionDeviceTypeOriginal = isContextDimensionDeviceTypeOriginal;
exports.ContextDimensionSensor = 'ContextDimensionSensor';
function isContextDimensionSensor(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionSensor);
}
exports.isContextDimensionSensor = isContextDimensionSensor;
exports.ContextDimensionSensorTypeExtended = 'ContextDimensionSensorTypeExtended';
function isContextDimensionSensorTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionSensorTypeExtended);
}
exports.isContextDimensionSensorTypeExtended = isContextDimensionSensorTypeExtended;
exports.ContextDimensionSensorTypeExtendedRef = 'ContextDimensionSensorTypeExtendedRef';
function isContextDimensionSensorTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionSensorTypeExtendedRef);
}
exports.isContextDimensionSensorTypeExtendedRef = isContextDimensionSensorTypeExtendedRef;
exports.ContextDimensionSensorTypeOriginal = 'ContextDimensionSensorTypeOriginal';
function isContextDimensionSensorTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ContextDimensionSensorTypeOriginal);
}
exports.isContextDimensionSensorTypeOriginal = isContextDimensionSensorTypeOriginal;
exports.ContextVariable = 'ContextVariable';
function isContextVariable(item) {
    return exports.reflection.isInstance(item, exports.ContextVariable);
}
exports.isContextVariable = isContextVariable;
exports.Data = 'Data';
function isData(item) {
    return exports.reflection.isInstance(item, exports.Data);
}
exports.isData = isData;
exports.DataAttribute = 'DataAttribute';
function isDataAttribute(item) {
    return exports.reflection.isInstance(item, exports.DataAttribute);
}
exports.isDataAttribute = isDataAttribute;
exports.DataAttributeConstraint = 'DataAttributeConstraint';
function isDataAttributeConstraint(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeConstraint);
}
exports.isDataAttributeConstraint = isDataAttributeConstraint;
exports.DataAttributeRefs = 'DataAttributeRefs';
function isDataAttributeRefs(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeRefs);
}
exports.isDataAttributeRefs = isDataAttributeRefs;
exports.DataAttributeRefsList = 'DataAttributeRefsList';
function isDataAttributeRefsList(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeRefsList);
}
exports.isDataAttributeRefsList = isDataAttributeRefsList;
exports.DataAttributeTableRow = 'DataAttributeTableRow';
function isDataAttributeTableRow(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeTableRow);
}
exports.isDataAttributeTableRow = isDataAttributeTableRow;
exports.DataAttributeType = 'DataAttributeType';
function isDataAttributeType(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeType);
}
exports.isDataAttributeType = isDataAttributeType;
exports.DataAttributeTypeExtended = 'DataAttributeTypeExtended';
function isDataAttributeTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeTypeExtended);
}
exports.isDataAttributeTypeExtended = isDataAttributeTypeExtended;
exports.DataAttributeValues = 'DataAttributeValues';
function isDataAttributeValues(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeValues);
}
exports.isDataAttributeValues = isDataAttributeValues;
exports.DataEntity = 'DataEntity';
function isDataEntity(item) {
    return exports.reflection.isInstance(item, exports.DataEntity);
}
exports.isDataEntity = isDataEntity;
exports.DataEntityCluster = 'DataEntityCluster';
function isDataEntityCluster(item) {
    return exports.reflection.isInstance(item, exports.DataEntityCluster);
}
exports.isDataEntityCluster = isDataEntityCluster;
exports.DataEntityClusterTypeExtended = 'DataEntityClusterTypeExtended';
function isDataEntityClusterTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.DataEntityClusterTypeExtended);
}
exports.isDataEntityClusterTypeExtended = isDataEntityClusterTypeExtended;
exports.DataEntityClusterTypeExtendedRef = 'DataEntityClusterTypeExtendedRef';
function isDataEntityClusterTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.DataEntityClusterTypeExtendedRef);
}
exports.isDataEntityClusterTypeExtendedRef = isDataEntityClusterTypeExtendedRef;
exports.DataEntityClusterTypeOriginal = 'DataEntityClusterTypeOriginal';
function isDataEntityClusterTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.DataEntityClusterTypeOriginal);
}
exports.isDataEntityClusterTypeOriginal = isDataEntityClusterTypeOriginal;
exports.DataEntityConstraint = 'DataEntityConstraint';
function isDataEntityConstraint(item) {
    return exports.reflection.isInstance(item, exports.DataEntityConstraint);
}
exports.isDataEntityConstraint = isDataEntityConstraint;
exports.DataEntitySubTypeExtended = 'DataEntitySubTypeExtended';
function isDataEntitySubTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.DataEntitySubTypeExtended);
}
exports.isDataEntitySubTypeExtended = isDataEntitySubTypeExtended;
exports.DataEntitySubTypeExtendedRef = 'DataEntitySubTypeExtendedRef';
function isDataEntitySubTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.DataEntitySubTypeExtendedRef);
}
exports.isDataEntitySubTypeExtendedRef = isDataEntitySubTypeExtendedRef;
exports.DataEntitySubTypeOriginal = 'DataEntitySubTypeOriginal';
function isDataEntitySubTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.DataEntitySubTypeOriginal);
}
exports.isDataEntitySubTypeOriginal = isDataEntitySubTypeOriginal;
exports.DataEntityTypeExtended = 'DataEntityTypeExtended';
function isDataEntityTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.DataEntityTypeExtended);
}
exports.isDataEntityTypeExtended = isDataEntityTypeExtended;
exports.DataEntityTypeExtendedRef = 'DataEntityTypeExtendedRef';
function isDataEntityTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.DataEntityTypeExtendedRef);
}
exports.isDataEntityTypeExtendedRef = isDataEntityTypeExtendedRef;
exports.DataEntityTypeOriginal = 'DataEntityTypeOriginal';
function isDataEntityTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.DataEntityTypeOriginal);
}
exports.isDataEntityTypeOriginal = isDataEntityTypeOriginal;
exports.DataEnumeration = 'DataEnumeration';
function isDataEnumeration(item) {
    return exports.reflection.isInstance(item, exports.DataEnumeration);
}
exports.isDataEnumeration = isDataEnumeration;
exports.DataEnumerationElement = 'DataEnumerationElement';
function isDataEnumerationElement(item) {
    return exports.reflection.isInstance(item, exports.DataEnumerationElement);
}
exports.isDataEnumerationElement = isDataEnumerationElement;
exports.DetailsFormula = 'DetailsFormula';
function isDetailsFormula(item) {
    return exports.reflection.isInstance(item, exports.DetailsFormula);
}
exports.isDetailsFormula = isDetailsFormula;
exports.Equals = 'Equals';
function isEquals(item) {
    return exports.reflection.isInstance(item, exports.Equals);
}
exports.isEquals = isEquals;
exports.ForeignKey = 'ForeignKey';
function isForeignKey(item) {
    return exports.reflection.isInstance(item, exports.ForeignKey);
}
exports.isForeignKey = isForeignKey;
exports.ForeignKeyOnDeleteTypeExtended = 'ForeignKeyOnDeleteTypeExtended';
function isForeignKeyOnDeleteTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ForeignKeyOnDeleteTypeExtended);
}
exports.isForeignKeyOnDeleteTypeExtended = isForeignKeyOnDeleteTypeExtended;
exports.ForeignKeyOnDeleteTypeExtendedRef = 'ForeignKeyOnDeleteTypeExtendedRef';
function isForeignKeyOnDeleteTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ForeignKeyOnDeleteTypeExtendedRef);
}
exports.isForeignKeyOnDeleteTypeExtendedRef = isForeignKeyOnDeleteTypeExtendedRef;
exports.ForeignKeyOnDeleteTypeOriginal = 'ForeignKeyOnDeleteTypeOriginal';
function isForeignKeyOnDeleteTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ForeignKeyOnDeleteTypeOriginal);
}
exports.isForeignKeyOnDeleteTypeOriginal = isForeignKeyOnDeleteTypeOriginal;
exports.Import = 'Import';
function isImport(item) {
    return exports.reflection.isInstance(item, exports.Import);
}
exports.isImport = isImport;
exports.IncludeAll = 'IncludeAll';
function isIncludeAll(item) {
    return exports.reflection.isInstance(item, exports.IncludeAll);
}
exports.isIncludeAll = isIncludeAll;
exports.IncludeElement = 'IncludeElement';
function isIncludeElement(item) {
    return exports.reflection.isInstance(item, exports.IncludeElement);
}
exports.isIncludeElement = isIncludeElement;
exports.IncludeSystemElementType = 'IncludeSystemElementType';
function isIncludeSystemElementType(item) {
    return exports.reflection.isInstance(item, exports.IncludeSystemElementType);
}
exports.isIncludeSystemElementType = isIncludeSystemElementType;
exports.IntegerLiteral = 'IntegerLiteral';
function isIntegerLiteral(item) {
    return exports.reflection.isInstance(item, exports.IntegerLiteral);
}
exports.isIntegerLiteral = isIntegerLiteral;
exports.ManyToMany = 'ManyToMany';
function isManyToMany(item) {
    return exports.reflection.isInstance(item, exports.ManyToMany);
}
exports.isManyToMany = isManyToMany;
exports.Membership = 'Membership';
function isMembership(item) {
    return exports.reflection.isInstance(item, exports.Membership);
}
exports.isMembership = isMembership;
exports.MetricTypeExtended = 'MetricTypeExtended';
function isMetricTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.MetricTypeExtended);
}
exports.isMetricTypeExtended = isMetricTypeExtended;
exports.MetricTypeExtendedRef = 'MetricTypeExtendedRef';
function isMetricTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.MetricTypeExtendedRef);
}
exports.isMetricTypeExtendedRef = isMetricTypeExtendedRef;
exports.MetricTypeOriginal = 'MetricTypeOriginal';
function isMetricTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.MetricTypeOriginal);
}
exports.isMetricTypeOriginal = isMetricTypeOriginal;
exports.Minus = 'Minus';
function isMinus(item) {
    return exports.reflection.isInstance(item, exports.Minus);
}
exports.isMinus = isMinus;
exports.Model = 'Model';
function isModel(item) {
    return exports.reflection.isInstance(item, exports.Model);
}
exports.isModel = isModel;
exports.MultiOrDivOrMod = 'MultiOrDivOrMod';
function isMultiOrDivOrMod(item) {
    return exports.reflection.isInstance(item, exports.MultiOrDivOrMod);
}
exports.isMultiOrDivOrMod = isMultiOrDivOrMod;
exports.Multiplicity = 'Multiplicity';
function isMultiplicity(item) {
    return exports.reflection.isInstance(item, exports.Multiplicity);
}
exports.isMultiplicity = isMultiplicity;
exports.NetworkConnectivityTypeExtended = 'NetworkConnectivityTypeExtended';
function isNetworkConnectivityTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.NetworkConnectivityTypeExtended);
}
exports.isNetworkConnectivityTypeExtended = isNetworkConnectivityTypeExtended;
exports.NetworkConnectivityTypeExtendedRef = 'NetworkConnectivityTypeExtendedRef';
function isNetworkConnectivityTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.NetworkConnectivityTypeExtendedRef);
}
exports.isNetworkConnectivityTypeExtendedRef = isNetworkConnectivityTypeExtendedRef;
exports.NetworkConnectivityTypeOriginal = 'NetworkConnectivityTypeOriginal';
function isNetworkConnectivityTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.NetworkConnectivityTypeOriginal);
}
exports.isNetworkConnectivityTypeOriginal = isNetworkConnectivityTypeOriginal;
exports.NullLiteral = 'NullLiteral';
function isNullLiteral(item) {
    return exports.reflection.isInstance(item, exports.NullLiteral);
}
exports.isNullLiteral = isNullLiteral;
exports.PackageSystem = 'PackageSystem';
function isPackageSystem(item) {
    return exports.reflection.isInstance(item, exports.PackageSystem);
}
exports.isPackageSystem = isPackageSystem;
exports.Plus = 'Plus';
function isPlus(item) {
    return exports.reflection.isInstance(item, exports.Plus);
}
exports.isPlus = isPlus;
exports.RefActiveElement = 'RefActiveElement';
function isRefActiveElement(item) {
    return exports.reflection.isInstance(item, exports.RefActiveElement);
}
exports.isRefActiveElement = isRefActiveElement;
exports.RefActor = 'RefActor';
function isRefActor(item) {
    return exports.reflection.isInstance(item, exports.RefActor);
}
exports.isRefActor = isRefActor;
exports.RefDataEntity = 'RefDataEntity';
function isRefDataEntity(item) {
    return exports.reflection.isInstance(item, exports.RefDataEntity);
}
exports.isRefDataEntity = isRefDataEntity;
exports.RefFlowTo = 'RefFlowTo';
function isRefFlowTo(item) {
    return exports.reflection.isInstance(item, exports.RefFlowTo);
}
exports.isRefFlowTo = isRefFlowTo;
exports.RefSystems = 'RefSystems';
function isRefSystems(item) {
    return exports.reflection.isInstance(item, exports.RefSystems);
}
exports.isRefSystems = isRefSystems;
exports.RefUC = 'RefUC';
function isRefUC(item) {
    return exports.reflection.isInstance(item, exports.RefUC);
}
exports.isRefUC = isRefUC;
exports.ScreenSizeCategoryTypeExtended = 'ScreenSizeCategoryTypeExtended';
function isScreenSizeCategoryTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.ScreenSizeCategoryTypeExtended);
}
exports.isScreenSizeCategoryTypeExtended = isScreenSizeCategoryTypeExtended;
exports.ScreenSizeCategoryTypeExtendedRef = 'ScreenSizeCategoryTypeExtendedRef';
function isScreenSizeCategoryTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.ScreenSizeCategoryTypeExtendedRef);
}
exports.isScreenSizeCategoryTypeExtendedRef = isScreenSizeCategoryTypeExtendedRef;
exports.ScreenSizeCategoryTypeOriginal = 'ScreenSizeCategoryTypeOriginal';
function isScreenSizeCategoryTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.ScreenSizeCategoryTypeOriginal);
}
exports.isScreenSizeCategoryTypeOriginal = isScreenSizeCategoryTypeOriginal;
exports.SensorStatusTypeExtended = 'SensorStatusTypeExtended';
function isSensorStatusTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.SensorStatusTypeExtended);
}
exports.isSensorStatusTypeExtended = isSensorStatusTypeExtended;
exports.SensorStatusTypeExtendedRef = 'SensorStatusTypeExtendedRef';
function isSensorStatusTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.SensorStatusTypeExtendedRef);
}
exports.isSensorStatusTypeExtendedRef = isSensorStatusTypeExtendedRef;
exports.SensorStatusTypeOriginal = 'SensorStatusTypeOriginal';
function isSensorStatusTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.SensorStatusTypeOriginal);
}
exports.isSensorStatusTypeOriginal = isSensorStatusTypeOriginal;
exports.Stereotype = 'Stereotype';
function isStereotype(item) {
    return exports.reflection.isInstance(item, exports.Stereotype);
}
exports.isStereotype = isStereotype;
exports.StereotypeTypeExtended = 'StereotypeTypeExtended';
function isStereotypeTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.StereotypeTypeExtended);
}
exports.isStereotypeTypeExtended = isStereotypeTypeExtended;
exports.StereotypeTypeExtendedRef = 'StereotypeTypeExtendedRef';
function isStereotypeTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.StereotypeTypeExtendedRef);
}
exports.isStereotypeTypeExtendedRef = isStereotypeTypeExtendedRef;
exports.StereotypeTypeOriginal = 'StereotypeTypeOriginal';
function isStereotypeTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.StereotypeTypeOriginal);
}
exports.isStereotypeTypeOriginal = isStereotypeTypeOriginal;
exports.StringLiteral = 'StringLiteral';
function isStringLiteral(item) {
    return exports.reflection.isInstance(item, exports.StringLiteral);
}
exports.isStringLiteral = isStringLiteral;
exports.System = 'System';
function isSystem(item) {
    return exports.reflection.isInstance(item, exports.System);
}
exports.isSystem = isSystem;
exports.SystemSubTypeExtended = 'SystemSubTypeExtended';
function isSystemSubTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.SystemSubTypeExtended);
}
exports.isSystemSubTypeExtended = isSystemSubTypeExtended;
exports.SystemSubTypeExtendedRef = 'SystemSubTypeExtendedRef';
function isSystemSubTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.SystemSubTypeExtendedRef);
}
exports.isSystemSubTypeExtendedRef = isSystemSubTypeExtendedRef;
exports.SystemSubTypeOriginal = 'SystemSubTypeOriginal';
function isSystemSubTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.SystemSubTypeOriginal);
}
exports.isSystemSubTypeOriginal = isSystemSubTypeOriginal;
exports.SystemTypeExtended = 'SystemTypeExtended';
function isSystemTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.SystemTypeExtended);
}
exports.isSystemTypeExtended = isSystemTypeExtended;
exports.SystemTypeExtendedRef = 'SystemTypeExtendedRef';
function isSystemTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.SystemTypeExtendedRef);
}
exports.isSystemTypeExtendedRef = isSystemTypeExtendedRef;
exports.SystemTypeOriginal = 'SystemTypeOriginal';
function isSystemTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.SystemTypeOriginal);
}
exports.isSystemTypeOriginal = isSystemTypeOriginal;
exports.Tag = 'Tag';
function isTag(item) {
    return exports.reflection.isInstance(item, exports.Tag);
}
exports.isTag = isTag;
exports.TernaryExpression = 'TernaryExpression';
function isTernaryExpression(item) {
    return exports.reflection.isInstance(item, exports.TernaryExpression);
}
exports.isTernaryExpression = isTernaryExpression;
exports.UCActions = 'UCActions';
function isUCActions(item) {
    return exports.reflection.isInstance(item, exports.UCActions);
}
exports.isUCActions = isUCActions;
exports.UCExtends = 'UCExtends';
function isUCExtends(item) {
    return exports.reflection.isInstance(item, exports.UCExtends);
}
exports.isUCExtends = isUCExtends;
exports.UCExtensionPoint = 'UCExtensionPoint';
function isUCExtensionPoint(item) {
    return exports.reflection.isInstance(item, exports.UCExtensionPoint);
}
exports.isUCExtensionPoint = isUCExtensionPoint;
exports.UCExtensionPoints = 'UCExtensionPoints';
function isUCExtensionPoints(item) {
    return exports.reflection.isInstance(item, exports.UCExtensionPoints);
}
exports.isUCExtensionPoints = isUCExtensionPoints;
exports.UCIncludes = 'UCIncludes';
function isUCIncludes(item) {
    return exports.reflection.isInstance(item, exports.UCIncludes);
}
exports.isUCIncludes = isUCIncludes;
exports.UIAction = 'UIAction';
function isUIAction(item) {
    return exports.reflection.isInstance(item, exports.UIAction);
}
exports.isUIAction = isUIAction;
exports.UIActionEvent = 'UIActionEvent';
function isUIActionEvent(item) {
    return exports.reflection.isInstance(item, exports.UIActionEvent);
}
exports.isUIActionEvent = isUIActionEvent;
exports.UIActionEventTypeExtended = 'UIActionEventTypeExtended';
function isUIActionEventTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIActionEventTypeExtended);
}
exports.isUIActionEventTypeExtended = isUIActionEventTypeExtended;
exports.UIActionEventTypeExtendedRef = 'UIActionEventTypeExtendedRef';
function isUIActionEventTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIActionEventTypeExtendedRef);
}
exports.isUIActionEventTypeExtendedRef = isUIActionEventTypeExtendedRef;
exports.UIActionEventTypeOriginal = 'UIActionEventTypeOriginal';
function isUIActionEventTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIActionEventTypeOriginal);
}
exports.isUIActionEventTypeOriginal = isUIActionEventTypeOriginal;
exports.UIActionTypeExtended = 'UIActionTypeExtended';
function isUIActionTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIActionTypeExtended);
}
exports.isUIActionTypeExtended = isUIActionTypeExtended;
exports.UIActionTypeExtendedRef = 'UIActionTypeExtendedRef';
function isUIActionTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIActionTypeExtendedRef);
}
exports.isUIActionTypeExtendedRef = isUIActionTypeExtendedRef;
exports.UIActionTypeOriginal = 'UIActionTypeOriginal';
function isUIActionTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIActionTypeOriginal);
}
exports.isUIActionTypeOriginal = isUIActionTypeOriginal;
exports.UIComponent = 'UIComponent';
function isUIComponent(item) {
    return exports.reflection.isInstance(item, exports.UIComponent);
}
exports.isUIComponent = isUIComponent;
exports.UIComponentPart = 'UIComponentPart';
function isUIComponentPart(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPart);
}
exports.isUIComponentPart = isUIComponentPart;
exports.UIComponentPartSubTypeExtended = 'UIComponentPartSubTypeExtended';
function isUIComponentPartSubTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPartSubTypeExtended);
}
exports.isUIComponentPartSubTypeExtended = isUIComponentPartSubTypeExtended;
exports.UIComponentPartSubTypeExtendedRef = 'UIComponentPartSubTypeExtendedRef';
function isUIComponentPartSubTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPartSubTypeExtendedRef);
}
exports.isUIComponentPartSubTypeExtendedRef = isUIComponentPartSubTypeExtendedRef;
exports.UIComponentPartSubTypeOriginal = 'UIComponentPartSubTypeOriginal';
function isUIComponentPartSubTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPartSubTypeOriginal);
}
exports.isUIComponentPartSubTypeOriginal = isUIComponentPartSubTypeOriginal;
exports.UIComponentPartTypeExtended = 'UIComponentPartTypeExtended';
function isUIComponentPartTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPartTypeExtended);
}
exports.isUIComponentPartTypeExtended = isUIComponentPartTypeExtended;
exports.UIComponentPartTypeExtendedRef = 'UIComponentPartTypeExtendedRef';
function isUIComponentPartTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPartTypeExtendedRef);
}
exports.isUIComponentPartTypeExtendedRef = isUIComponentPartTypeExtendedRef;
exports.UIComponentPartTypeOriginal = 'UIComponentPartTypeOriginal';
function isUIComponentPartTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIComponentPartTypeOriginal);
}
exports.isUIComponentPartTypeOriginal = isUIComponentPartTypeOriginal;
exports.UIComponentRef = 'UIComponentRef';
function isUIComponentRef(item) {
    return exports.reflection.isInstance(item, exports.UIComponentRef);
}
exports.isUIComponentRef = isUIComponentRef;
exports.UIComponentSubTypeExtended = 'UIComponentSubTypeExtended';
function isUIComponentSubTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIComponentSubTypeExtended);
}
exports.isUIComponentSubTypeExtended = isUIComponentSubTypeExtended;
exports.UIComponentSubTypeExtendedRef = 'UIComponentSubTypeExtendedRef';
function isUIComponentSubTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIComponentSubTypeExtendedRef);
}
exports.isUIComponentSubTypeExtendedRef = isUIComponentSubTypeExtendedRef;
exports.UIComponentSubTypeOriginal = 'UIComponentSubTypeOriginal';
function isUIComponentSubTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIComponentSubTypeOriginal);
}
exports.isUIComponentSubTypeOriginal = isUIComponentSubTypeOriginal;
exports.UIComponentTypeExtended = 'UIComponentTypeExtended';
function isUIComponentTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIComponentTypeExtended);
}
exports.isUIComponentTypeExtended = isUIComponentTypeExtended;
exports.UIComponentTypeExtendedRef = 'UIComponentTypeExtendedRef';
function isUIComponentTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIComponentTypeExtendedRef);
}
exports.isUIComponentTypeExtendedRef = isUIComponentTypeExtendedRef;
exports.UIComponentTypeOriginal = 'UIComponentTypeOriginal';
function isUIComponentTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIComponentTypeOriginal);
}
exports.isUIComponentTypeOriginal = isUIComponentTypeOriginal;
exports.UIContainer = 'UIContainer';
function isUIContainer(item) {
    return exports.reflection.isInstance(item, exports.UIContainer);
}
exports.isUIContainer = isUIContainer;
exports.UIContainerSubTypeExtended = 'UIContainerSubTypeExtended';
function isUIContainerSubTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIContainerSubTypeExtended);
}
exports.isUIContainerSubTypeExtended = isUIContainerSubTypeExtended;
exports.UIContainerSubTypeExtendedRef = 'UIContainerSubTypeExtendedRef';
function isUIContainerSubTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIContainerSubTypeExtendedRef);
}
exports.isUIContainerSubTypeExtendedRef = isUIContainerSubTypeExtendedRef;
exports.UIContainerSubTypeOriginal = 'UIContainerSubTypeOriginal';
function isUIContainerSubTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIContainerSubTypeOriginal);
}
exports.isUIContainerSubTypeOriginal = isUIContainerSubTypeOriginal;
exports.UIContainerTypeExtended = 'UIContainerTypeExtended';
function isUIContainerTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIContainerTypeExtended);
}
exports.isUIContainerTypeExtended = isUIContainerTypeExtended;
exports.UIContainerTypeExtendedRef = 'UIContainerTypeExtendedRef';
function isUIContainerTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIContainerTypeExtendedRef);
}
exports.isUIContainerTypeExtendedRef = isUIContainerTypeExtendedRef;
exports.UIContainerTypeOriginal = 'UIContainerTypeOriginal';
function isUIContainerTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIContainerTypeOriginal);
}
exports.isUIContainerTypeOriginal = isUIContainerTypeOriginal;
exports.UIContextExpression = 'UIContextExpression';
function isUIContextExpression(item) {
    return exports.reflection.isInstance(item, exports.UIContextExpression);
}
exports.isUIContextExpression = isUIContextExpression;
exports.UIElementEvent = 'UIElementEvent';
function isUIElementEvent(item) {
    return exports.reflection.isInstance(item, exports.UIElementEvent);
}
exports.isUIElementEvent = isUIElementEvent;
exports.UIElementEventSubTypeExtended = 'UIElementEventSubTypeExtended';
function isUIElementEventSubTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIElementEventSubTypeExtended);
}
exports.isUIElementEventSubTypeExtended = isUIElementEventSubTypeExtended;
exports.UIElementEventSubTypeExtendedRef = 'UIElementEventSubTypeExtendedRef';
function isUIElementEventSubTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIElementEventSubTypeExtendedRef);
}
exports.isUIElementEventSubTypeExtendedRef = isUIElementEventSubTypeExtendedRef;
exports.UIElementEventSubTypeOriginal = 'UIElementEventSubTypeOriginal';
function isUIElementEventSubTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIElementEventSubTypeOriginal);
}
exports.isUIElementEventSubTypeOriginal = isUIElementEventSubTypeOriginal;
exports.UIElementEventTypeExtended = 'UIElementEventTypeExtended';
function isUIElementEventTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIElementEventTypeExtended);
}
exports.isUIElementEventTypeExtended = isUIElementEventTypeExtended;
exports.UIElementEventTypeExtendedRef = 'UIElementEventTypeExtendedRef';
function isUIElementEventTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIElementEventTypeExtendedRef);
}
exports.isUIElementEventTypeExtendedRef = isUIElementEventTypeExtendedRef;
exports.UIElementEventTypeOriginal = 'UIElementEventTypeOriginal';
function isUIElementEventTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIElementEventTypeOriginal);
}
exports.isUIElementEventTypeOriginal = isUIElementEventTypeOriginal;
exports.UIParameter = 'UIParameter';
function isUIParameter(item) {
    return exports.reflection.isInstance(item, exports.UIParameter);
}
exports.isUIParameter = isUIParameter;
exports.UIParameterBinding = 'UIParameterBinding';
function isUIParameterBinding(item) {
    return exports.reflection.isInstance(item, exports.UIParameterBinding);
}
exports.isUIParameterBinding = isUIParameterBinding;
exports.UIParameterBindingGroup = 'UIParameterBindingGroup';
function isUIParameterBindingGroup(item) {
    return exports.reflection.isInstance(item, exports.UIParameterBindingGroup);
}
exports.isUIParameterBindingGroup = isUIParameterBindingGroup;
exports.UIPortDefinition = 'UIPortDefinition';
function isUIPortDefinition(item) {
    return exports.reflection.isInstance(item, exports.UIPortDefinition);
}
exports.isUIPortDefinition = isUIPortDefinition;
exports.UIPortDefinitionTypeExtended = 'UIPortDefinitionTypeExtended';
function isUIPortDefinitionTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIPortDefinitionTypeExtended);
}
exports.isUIPortDefinitionTypeExtended = isUIPortDefinitionTypeExtended;
exports.UIPortDefinitionTypeExtendedRef = 'UIPortDefinitionTypeExtendedRef';
function isUIPortDefinitionTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIPortDefinitionTypeExtendedRef);
}
exports.isUIPortDefinitionTypeExtendedRef = isUIPortDefinitionTypeExtendedRef;
exports.UIPortDefinitionTypeOriginal = 'UIPortDefinitionTypeOriginal';
function isUIPortDefinitionTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIPortDefinitionTypeOriginal);
}
exports.isUIPortDefinitionTypeOriginal = isUIPortDefinitionTypeOriginal;
exports.UISimpleExpression = 'UISimpleExpression';
function isUISimpleExpression(item) {
    return exports.reflection.isInstance(item, exports.UISimpleExpression);
}
exports.isUISimpleExpression = isUISimpleExpression;
exports.UISystemEvent = 'UISystemEvent';
function isUISystemEvent(item) {
    return exports.reflection.isInstance(item, exports.UISystemEvent);
}
exports.isUISystemEvent = isUISystemEvent;
exports.UISystemEventTypeExtended = 'UISystemEventTypeExtended';
function isUISystemEventTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UISystemEventTypeExtended);
}
exports.isUISystemEventTypeExtended = isUISystemEventTypeExtended;
exports.UISystemEventTypeExtendedRef = 'UISystemEventTypeExtendedRef';
function isUISystemEventTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UISystemEventTypeExtendedRef);
}
exports.isUISystemEventTypeExtendedRef = isUISystemEventTypeExtendedRef;
exports.UISystemEventTypeOriginal = 'UISystemEventTypeOriginal';
function isUISystemEventTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UISystemEventTypeOriginal);
}
exports.isUISystemEventTypeOriginal = isUISystemEventTypeOriginal;
exports.UIThrowingEvent = 'UIThrowingEvent';
function isUIThrowingEvent(item) {
    return exports.reflection.isInstance(item, exports.UIThrowingEvent);
}
exports.isUIThrowingEvent = isUIThrowingEvent;
exports.UIThrowingEventTypeExtended = 'UIThrowingEventTypeExtended';
function isUIThrowingEventTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIThrowingEventTypeExtended);
}
exports.isUIThrowingEventTypeExtended = isUIThrowingEventTypeExtended;
exports.UIThrowingEventTypeExtendedRef = 'UIThrowingEventTypeExtendedRef';
function isUIThrowingEventTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIThrowingEventTypeExtendedRef);
}
exports.isUIThrowingEventTypeExtendedRef = isUIThrowingEventTypeExtendedRef;
exports.UIThrowingEventTypeOriginal = 'UIThrowingEventTypeOriginal';
function isUIThrowingEventTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIThrowingEventTypeOriginal);
}
exports.isUIThrowingEventTypeOriginal = isUIThrowingEventTypeOriginal;
exports.UIWireframeTypeExtended = 'UIWireframeTypeExtended';
function isUIWireframeTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UIWireframeTypeExtended);
}
exports.isUIWireframeTypeExtended = isUIWireframeTypeExtended;
exports.UIWireframeTypeExtendedRef = 'UIWireframeTypeExtendedRef';
function isUIWireframeTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UIWireframeTypeExtendedRef);
}
exports.isUIWireframeTypeExtendedRef = isUIWireframeTypeExtendedRef;
exports.UIWireframeTypeOriginal = 'UIWireframeTypeOriginal';
function isUIWireframeTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UIWireframeTypeOriginal);
}
exports.isUIWireframeTypeOriginal = isUIWireframeTypeOriginal;
exports.UpdateField = 'UpdateField';
function isUpdateField(item) {
    return exports.reflection.isInstance(item, exports.UpdateField);
}
exports.isUpdateField = isUpdateField;
exports.UpdateFields = 'UpdateFields';
function isUpdateFields(item) {
    return exports.reflection.isInstance(item, exports.UpdateFields);
}
exports.isUpdateFields = isUpdateFields;
exports.UseCase = 'UseCase';
function isUseCase(item) {
    return exports.reflection.isInstance(item, exports.UseCase);
}
exports.isUseCase = isUseCase;
exports.UseCaseTypeExtended = 'UseCaseTypeExtended';
function isUseCaseTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UseCaseTypeExtended);
}
exports.isUseCaseTypeExtended = isUseCaseTypeExtended;
exports.UseCaseTypeExtendedRef = 'UseCaseTypeExtendedRef';
function isUseCaseTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UseCaseTypeExtendedRef);
}
exports.isUseCaseTypeExtendedRef = isUseCaseTypeExtendedRef;
exports.UseCaseTypeOriginal = 'UseCaseTypeOriginal';
function isUseCaseTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UseCaseTypeOriginal);
}
exports.isUseCaseTypeOriginal = isUseCaseTypeOriginal;
exports.UserActivityStatusTypeExtended = 'UserActivityStatusTypeExtended';
function isUserActivityStatusTypeExtended(item) {
    return exports.reflection.isInstance(item, exports.UserActivityStatusTypeExtended);
}
exports.isUserActivityStatusTypeExtended = isUserActivityStatusTypeExtended;
exports.UserActivityStatusTypeExtendedRef = 'UserActivityStatusTypeExtendedRef';
function isUserActivityStatusTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.UserActivityStatusTypeExtendedRef);
}
exports.isUserActivityStatusTypeExtendedRef = isUserActivityStatusTypeExtendedRef;
exports.UserActivityStatusTypeOriginal = 'UserActivityStatusTypeOriginal';
function isUserActivityStatusTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.UserActivityStatusTypeOriginal);
}
exports.isUserActivityStatusTypeOriginal = isUserActivityStatusTypeOriginal;
exports.Variable = 'Variable';
function isVariable(item) {
    return exports.reflection.isInstance(item, exports.Variable);
}
exports.isVariable = isVariable;
exports._Date = '_Date';
exports.DoubleOrInt = 'DoubleOrInt';
exports.Percentage = 'Percentage';
function is_Date(item) {
    return exports.reflection.isInstance(item, exports._Date);
}
exports.is_Date = is_Date;
exports.Month = 'Month';
function isMonth(item) {
    return exports.reflection.isInstance(item, exports.Month);
}
exports.isMonth = isMonth;
exports.DataAttributeTypeExtendedRef = 'DataAttributeTypeExtendedRef';
function isDataAttributeTypeExtendedRef(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeTypeExtendedRef);
}
exports.isDataAttributeTypeExtendedRef = isDataAttributeTypeExtendedRef;
exports.DataAttributeTypeOriginal = 'DataAttributeTypeOriginal';
function isDataAttributeTypeOriginal(item) {
    return exports.reflection.isInstance(item, exports.DataAttributeTypeOriginal);
}
exports.isDataAttributeTypeOriginal = isDataAttributeTypeOriginal;
exports.DataEnumerationRef = 'DataEnumerationRef';
function isDataEnumerationRef(item) {
    return exports.reflection.isInstance(item, exports.DataEnumerationRef);
}
exports.isDataEnumerationRef = isDataEnumerationRef;
exports.FunctionReference = 'FunctionReference';
function isFunctionReference(item) {
    return exports.reflection.isInstance(item, exports.FunctionReference);
}
exports.isFunctionReference = isFunctionReference;
exports.VariableReference = 'VariableReference';
function isVariableReference(item) {
    return exports.reflection.isInstance(item, exports.VariableReference);
}
exports.isVariableReference = isVariableReference;
class AslAstReflection extends langium_1.AbstractAstReflection {
    getAllTypes() {
        return ['ActionType', 'ActionTypeExtended', 'ActionTypeExtendedRef', 'ActionTypeOriginal', 'ActiveElement', 'ActiveEvent', 'ActiveEventType', 'ActiveEventTypeExtended', 'ActiveEventTypeExtendedRef', 'ActiveEventTypeOriginal', 'ActiveFlow', 'ActiveFlowType', 'ActiveFlowTypeExtended', 'ActiveFlowTypeExtendedRef', 'ActiveFlowTypeOriginal', 'ActiveStructureElement', 'ActiveTask', 'ActiveTaskType', 'ActiveTaskTypeExtended', 'ActiveTaskTypeExtendedRef', 'ActiveTaskTypeOriginal', 'ActorType', 'ActorTypeExtended', 'ActorTypeExtendedRef', 'ActorTypeOriginal', 'ArithmeticFormula', 'ArithmeticSigned', 'AttributeValue', 'BehaviorElement', 'BooleanExpression', 'BooleanLiteral', 'BooleanNegation', 'Check', 'ChildDataEntity', 'Comparison', 'Context', 'ContextDimension', 'ContextDimensionActor', 'ContextDimensionDevice', 'ContextDimensionDeviceType', 'ContextDimensionDeviceTypeExtended', 'ContextDimensionDeviceTypeExtendedRef', 'ContextDimensionDeviceTypeOriginal', 'ContextDimensionSensor', 'ContextDimensionSensorType', 'ContextDimensionSensorTypeExtended', 'ContextDimensionSensorTypeExtendedRef', 'ContextDimensionSensorTypeOriginal', 'ContextElement', 'ContextVariable', 'Data', 'DataAttribute', 'DataAttributeConstraint', 'DataAttributeRefs', 'DataAttributeRefsList', 'DataAttributeTableRow', 'DataAttributeType', 'DataAttributeTypeExtended', 'DataAttributeTypeExtendedRef', 'DataAttributeTypeOriginal', 'DataAttributeValues', 'DataEntity', 'DataEntityCluster', 'DataEntityClusterType', 'DataEntityClusterTypeExtended', 'DataEntityClusterTypeExtendedRef', 'DataEntityClusterTypeOriginal', 'DataEntityConstraint', 'DataEntityGeneric', 'DataEntitySubType', 'DataEntitySubTypeExtended', 'DataEntitySubTypeExtendedRef', 'DataEntitySubTypeOriginal', 'DataEntityType', 'DataEntityTypeExtended', 'DataEntityTypeExtendedRef', 'DataEntityTypeOriginal', 'DataEnumeration', 'DataEnumerationElement', 'DataEnumerationRef', 'DetailsFormula', 'DetailsFormulaOp', 'Equals', 'Expression', 'FlowElement', 'ForeignKey', 'ForeignKeyOnDeleteType', 'ForeignKeyOnDeleteTypeExtended', 'ForeignKeyOnDeleteTypeExtendedRef', 'ForeignKeyOnDeleteTypeOriginal', 'Formula', 'FunctionReference', 'Import', 'IncludeAll', 'IncludeElement', 'IncludeElementGeneric', 'IncludeSystemElementType', 'IntegerLiteral', 'LiteralExpression', 'ManyToMany', 'Membership', 'MetricType', 'MetricTypeExtended', 'MetricTypeExtendedRef', 'MetricTypeOriginal', 'Minus', 'Model', 'Month', 'MultiOrDivOrMod', 'Multiplicity', 'NetworkConnectivityType', 'NetworkConnectivityTypeExtended', 'NetworkConnectivityTypeExtendedRef', 'NetworkConnectivityTypeOriginal', 'NullLiteral', 'OtherElement', 'PackageAbstract', 'PackageSystem', 'PassiveStructureElement', 'Plus', 'RefActiveElement', 'RefActor', 'RefDataEntity', 'RefFlowTo', 'RefSystems', 'RefUC', 'ScreenSizeCategoryType', 'ScreenSizeCategoryTypeExtended', 'ScreenSizeCategoryTypeExtendedRef', 'ScreenSizeCategoryTypeOriginal', 'SensorStatusType', 'SensorStatusTypeExtended', 'SensorStatusTypeExtendedRef', 'SensorStatusTypeOriginal', 'Stereotype', 'StereotypeType', 'StereotypeTypeExtended', 'StereotypeTypeExtendedRef', 'StereotypeTypeOriginal', 'StringLiteral', 'StructureElement', 'System', 'SystemConcept', 'SystemElement', 'SystemSubType', 'SystemSubTypeExtended', 'SystemSubTypeExtendedRef', 'SystemSubTypeOriginal', 'SystemType', 'SystemTypeExtended', 'SystemTypeExtendedRef', 'SystemTypeOriginal', 'Tag', 'TernaryExpression', 'TypeExtended', 'UCActions', 'UCExtends', 'UCExtensionPoint', 'UCExtensionPoints', 'UCIncludes', 'UIAction', 'UIActionEvent', 'UIActionEventType', 'UIActionEventTypeExtended', 'UIActionEventTypeExtendedRef', 'UIActionEventTypeOriginal', 'UIActionType', 'UIActionTypeExtended', 'UIActionTypeExtendedRef', 'UIActionTypeOriginal', 'UICatchingEvent', 'UIComponent', 'UIComponentPart', 'UIComponentPartSubType', 'UIComponentPartSubTypeExtended', 'UIComponentPartSubTypeExtendedRef', 'UIComponentPartSubTypeOriginal', 'UIComponentPartType', 'UIComponentPartTypeExtended', 'UIComponentPartTypeExtendedRef', 'UIComponentPartTypeOriginal', 'UIComponentRef', 'UIComponentSubType', 'UIComponentSubTypeExtended', 'UIComponentSubTypeExtendedRef', 'UIComponentSubTypeOriginal', 'UIComponentType', 'UIComponentTypeExtended', 'UIComponentTypeExtendedRef', 'UIComponentTypeOriginal', 'UIContainer', 'UIContainerSubType', 'UIContainerSubTypeExtended', 'UIContainerSubTypeExtendedRef', 'UIContainerSubTypeOriginal', 'UIContainerType', 'UIContainerTypeExtended', 'UIContainerTypeExtendedRef', 'UIContainerTypeOriginal', 'UIContextExpression', 'UIElement', 'UIElementEvent', 'UIElementEventSubType', 'UIElementEventSubTypeExtended', 'UIElementEventSubTypeExtendedRef', 'UIElementEventSubTypeOriginal', 'UIElementEventType', 'UIElementEventTypeExtended', 'UIElementEventTypeExtendedRef', 'UIElementEventTypeOriginal', 'UIEvent', 'UIExpression', 'UIModelElement', 'UIParameter', 'UIParameterBinding', 'UIParameterBindingGroup', 'UIPortDefinition', 'UIPortDefinitionType', 'UIPortDefinitionTypeExtended', 'UIPortDefinitionTypeExtendedRef', 'UIPortDefinitionTypeOriginal', 'UISimpleExpression', 'UISystemEvent', 'UISystemEventType', 'UISystemEventTypeExtended', 'UISystemEventTypeExtendedRef', 'UISystemEventTypeOriginal', 'UIThrowingEvent', 'UIThrowingEventType', 'UIThrowingEventTypeExtended', 'UIThrowingEventTypeExtendedRef', 'UIThrowingEventTypeOriginal', 'UIWireframeType', 'UIWireframeTypeExtended', 'UIWireframeTypeExtendedRef', 'UIWireframeTypeOriginal', 'UpdateField', 'UpdateFields', 'UseCase', 'UseCaseType', 'UseCaseTypeExtended', 'UseCaseTypeExtendedRef', 'UseCaseTypeOriginal', 'UserActivityStatusType', 'UserActivityStatusTypeExtended', 'UserActivityStatusTypeExtendedRef', 'UserActivityStatusTypeOriginal', 'Variable', 'VariableReference', '_Date', '_Function'];
    }
    computeIsSubtype(subtype, supertype) {
        switch (subtype) {
            case exports._Date:
            case exports.DoubleOrInt:
            case exports.Month:
            case exports.Percentage: {
                return this.isSubtype(exports.AttributeValue, supertype);
            }
            case exports.ActionTypeExtended:
            case exports.ActiveEventTypeExtended:
            case exports.ActiveFlowTypeExtended:
            case exports.ActiveTaskTypeExtended:
            case exports.ActorTypeExtended:
            case exports.ContextDimensionDeviceTypeExtended:
            case exports.ContextDimensionSensorTypeExtended:
            case exports.DataAttributeTypeExtended:
            case exports.DataEntityClusterTypeExtended:
            case exports.DataEntitySubTypeExtended:
            case exports.DataEntityTypeExtended:
            case exports.ForeignKeyOnDeleteTypeExtended:
            case exports.MetricTypeExtended:
            case exports.NetworkConnectivityTypeExtended:
            case exports.ScreenSizeCategoryTypeExtended:
            case exports.SensorStatusTypeExtended:
            case exports.StereotypeTypeExtended:
            case exports.SystemSubTypeExtended:
            case exports.SystemTypeExtended:
            case exports.UIActionEventTypeExtended:
            case exports.UIActionTypeExtended:
            case exports.UIComponentPartSubTypeExtended:
            case exports.UIComponentPartTypeExtended:
            case exports.UIComponentSubTypeExtended:
            case exports.UIComponentTypeExtended:
            case exports.UIContainerSubTypeExtended:
            case exports.UIContainerTypeExtended:
            case exports.UIElementEventSubTypeExtended:
            case exports.UIElementEventTypeExtended:
            case exports.UIPortDefinitionTypeExtended:
            case exports.UISystemEventTypeExtended:
            case exports.UIThrowingEventTypeExtended:
            case exports.UIWireframeTypeExtended:
            case exports.UseCaseTypeExtended: {
                return this.isSubtype(exports.TypeExtended, supertype);
            }
            case exports.ActionTypeExtendedRef:
            case exports.ActionTypeOriginal: {
                return this.isSubtype(exports.ActionType, supertype);
            }
            case exports.ActiveElement: {
                return this.isSubtype(exports.BehaviorElement, supertype);
            }
            case exports.ActiveEvent:
            case exports.ActiveFlow:
            case exports.ActiveTask:
            case exports.UseCase: {
                return this.isSubtype(exports.ActiveElement, supertype);
            }
            case exports.ActiveEventTypeExtendedRef:
            case exports.ActiveEventTypeOriginal: {
                return this.isSubtype(exports.ActiveEventType, supertype);
            }
            case exports.ActiveFlowTypeExtendedRef:
            case exports.ActiveFlowTypeOriginal: {
                return this.isSubtype(exports.ActiveFlowType, supertype);
            }
            case exports.ActiveStructureElement:
            case exports.PassiveStructureElement: {
                return this.isSubtype(exports.StructureElement, supertype);
            }
            case exports.ActiveTaskTypeExtendedRef:
            case exports.ActiveTaskTypeOriginal: {
                return this.isSubtype(exports.ActiveTaskType, supertype);
            }
            case exports.ActorTypeExtendedRef:
            case exports.ActorTypeOriginal: {
                return this.isSubtype(exports.ActorType, supertype);
            }
            case exports.ArithmeticFormula:
            case exports.DetailsFormula: {
                return this.isSubtype(exports.Formula, supertype);
            }
            case exports.ArithmeticSigned:
            case exports.BooleanExpression:
            case exports.BooleanNegation:
            case exports.Comparison:
            case exports.Equals:
            case exports.LiteralExpression:
            case exports.Membership:
            case exports.Minus:
            case exports.MultiOrDivOrMod:
            case exports.Plus:
            case exports.TernaryExpression: {
                return this.isSubtype(exports.Expression, supertype);
            }
            case exports.BehaviorElement:
            case exports.IncludeElementGeneric:
            case exports.OtherElement:
            case exports.StructureElement:
            case exports.UIModelElement: {
                return this.isSubtype(exports.SystemElement, supertype);
            }
            case exports.BooleanLiteral:
            case exports.IntegerLiteral:
            case exports.NullLiteral:
            case exports.StringLiteral: {
                return this.isSubtype(exports.LiteralExpression, supertype);
            }
            case exports.Context:
            case exports.Stereotype:
            case exports.TypeExtended: {
                return this.isSubtype(exports.OtherElement, supertype);
            }
            case exports.ContextDimension: {
                return this.isSubtype(exports.ActiveStructureElement, supertype) || this.isSubtype(exports.ContextElement, supertype);
            }
            case exports.ContextDimensionActor:
            case exports.ContextDimensionDevice:
            case exports.ContextDimensionSensor: {
                return this.isSubtype(exports.ContextDimension, supertype);
            }
            case exports.ContextDimensionDeviceTypeExtendedRef:
            case exports.ContextDimensionDeviceTypeOriginal: {
                return this.isSubtype(exports.ContextDimensionDeviceType, supertype);
            }
            case exports.ContextDimensionSensorTypeExtendedRef:
            case exports.ContextDimensionSensorTypeOriginal: {
                return this.isSubtype(exports.ContextDimensionSensorType, supertype);
            }
            case exports.ContextVariable: {
                return this.isSubtype(exports.ContextElement, supertype);
            }
            case exports.Data:
            case exports.DataEntityGeneric:
            case exports.DataEnumeration: {
                return this.isSubtype(exports.PassiveStructureElement, supertype);
            }
            case exports.DataAttributeTypeExtendedRef:
            case exports.DataAttributeTypeOriginal:
            case exports.DataEnumerationRef: {
                return this.isSubtype(exports.DataAttributeType, supertype);
            }
            case exports.DataEntity:
            case exports.DataEntityCluster: {
                return this.isSubtype(exports.DataEntityGeneric, supertype);
            }
            case exports.DataEntityClusterTypeExtendedRef:
            case exports.DataEntityClusterTypeOriginal: {
                return this.isSubtype(exports.DataEntityClusterType, supertype);
            }
            case exports.DataEntitySubTypeExtendedRef:
            case exports.DataEntitySubTypeOriginal: {
                return this.isSubtype(exports.DataEntitySubType, supertype);
            }
            case exports.DataEntityTypeExtendedRef:
            case exports.DataEntityTypeOriginal: {
                return this.isSubtype(exports.DataEntityType, supertype);
            }
            case exports.FlowElement:
            case exports.UIExpression:
            case exports.UIParameter:
            case exports.UIParameterBinding:
            case exports.UIParameterBindingGroup: {
                return this.isSubtype(exports.UIModelElement, supertype);
            }
            case exports.ForeignKeyOnDeleteTypeExtendedRef:
            case exports.ForeignKeyOnDeleteTypeOriginal: {
                return this.isSubtype(exports.ForeignKeyOnDeleteType, supertype);
            }
            case exports.FunctionReference:
            case exports.VariableReference: {
                return this.isSubtype(exports.Expression, supertype) || this.isSubtype(exports.LiteralExpression, supertype) || this.isSubtype(exports.TernaryExpression, supertype);
            }
            case exports.IncludeAll:
            case exports.IncludeElement: {
                return this.isSubtype(exports.IncludeElementGeneric, supertype);
            }
            case exports.MetricTypeExtendedRef:
            case exports.MetricTypeOriginal: {
                return this.isSubtype(exports.MetricType, supertype);
            }
            case exports.NetworkConnectivityTypeExtendedRef:
            case exports.NetworkConnectivityTypeOriginal: {
                return this.isSubtype(exports.NetworkConnectivityType, supertype);
            }
            case exports.PackageSystem: {
                return this.isSubtype(exports.PackageAbstract, supertype);
            }
            case exports.ScreenSizeCategoryTypeExtendedRef:
            case exports.ScreenSizeCategoryTypeOriginal: {
                return this.isSubtype(exports.ScreenSizeCategoryType, supertype);
            }
            case exports.SensorStatusTypeExtendedRef:
            case exports.SensorStatusTypeOriginal: {
                return this.isSubtype(exports.SensorStatusType, supertype);
            }
            case exports.StereotypeTypeExtendedRef:
            case exports.StereotypeTypeOriginal: {
                return this.isSubtype(exports.StereotypeType, supertype);
            }
            case exports.SystemElement: {
                return this.isSubtype(exports.SystemConcept, supertype);
            }
            case exports.SystemSubTypeExtendedRef:
            case exports.SystemSubTypeOriginal: {
                return this.isSubtype(exports.SystemSubType, supertype);
            }
            case exports.SystemTypeExtendedRef:
            case exports.SystemTypeOriginal: {
                return this.isSubtype(exports.SystemType, supertype);
            }
            case exports.UIAction:
            case exports.UIComponentPart:
            case exports.UIElement:
            case exports.UIEvent:
            case exports.UIPortDefinition: {
                return this.isSubtype(exports.FlowElement, supertype);
            }
            case exports.UIActionEvent:
            case exports.UIElementEvent:
            case exports.UISystemEvent: {
                return this.isSubtype(exports.UICatchingEvent, supertype);
            }
            case exports.UIActionEventTypeExtendedRef:
            case exports.UIActionEventTypeOriginal: {
                return this.isSubtype(exports.UIActionEventType, supertype);
            }
            case exports.UIActionTypeExtendedRef:
            case exports.UIActionTypeOriginal: {
                return this.isSubtype(exports.UIActionType, supertype);
            }
            case exports.UICatchingEvent:
            case exports.UIThrowingEvent: {
                return this.isSubtype(exports.UIEvent, supertype);
            }
            case exports.UIComponent:
            case exports.UIComponentRef:
            case exports.UIContainer: {
                return this.isSubtype(exports.UIElement, supertype);
            }
            case exports.UIComponentPartSubTypeExtendedRef:
            case exports.UIComponentPartSubTypeOriginal: {
                return this.isSubtype(exports.UIComponentPartSubType, supertype);
            }
            case exports.UIComponentPartTypeExtendedRef:
            case exports.UIComponentPartTypeOriginal: {
                return this.isSubtype(exports.UIComponentPartType, supertype);
            }
            case exports.UIComponentSubTypeExtendedRef:
            case exports.UIComponentSubTypeOriginal: {
                return this.isSubtype(exports.UIComponentSubType, supertype);
            }
            case exports.UIComponentTypeExtendedRef:
            case exports.UIComponentTypeOriginal: {
                return this.isSubtype(exports.UIComponentType, supertype);
            }
            case exports.UIContainerSubTypeExtendedRef:
            case exports.UIContainerSubTypeOriginal: {
                return this.isSubtype(exports.UIContainerSubType, supertype);
            }
            case exports.UIContainerTypeExtendedRef:
            case exports.UIContainerTypeOriginal: {
                return this.isSubtype(exports.UIContainerType, supertype);
            }
            case exports.UIContextExpression:
            case exports.UISimpleExpression: {
                return this.isSubtype(exports.UIExpression, supertype);
            }
            case exports.UIElementEventSubTypeExtendedRef:
            case exports.UIElementEventSubTypeOriginal: {
                return this.isSubtype(exports.UIElementEventSubType, supertype);
            }
            case exports.UIElementEventTypeExtendedRef:
            case exports.UIElementEventTypeOriginal: {
                return this.isSubtype(exports.UIElementEventType, supertype);
            }
            case exports.UIPortDefinitionTypeExtendedRef:
            case exports.UIPortDefinitionTypeOriginal: {
                return this.isSubtype(exports.UIPortDefinitionType, supertype);
            }
            case exports.UISystemEventTypeExtendedRef:
            case exports.UISystemEventTypeOriginal: {
                return this.isSubtype(exports.UISystemEventType, supertype);
            }
            case exports.UIThrowingEventTypeExtendedRef:
            case exports.UIThrowingEventTypeOriginal: {
                return this.isSubtype(exports.UIThrowingEventType, supertype);
            }
            case exports.UIWireframeTypeExtendedRef:
            case exports.UIWireframeTypeOriginal: {
                return this.isSubtype(exports.UIWireframeType, supertype);
            }
            case exports.UseCaseTypeExtendedRef:
            case exports.UseCaseTypeOriginal: {
                return this.isSubtype(exports.UseCaseType, supertype);
            }
            case exports.UserActivityStatusTypeExtendedRef:
            case exports.UserActivityStatusTypeOriginal: {
                return this.isSubtype(exports.UserActivityStatusType, supertype);
            }
            default: {
                return false;
            }
        }
    }
    getReferenceType(refInfo) {
        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;
        switch (referenceId) {
            case 'ActionTypeExtendedRef:type': {
                return exports.ActionTypeExtended;
            }
            case 'ActiveEventTypeExtendedRef:type': {
                return exports.ActiveEventTypeExtended;
            }
            case 'ActiveFlowTypeExtendedRef:type': {
                return exports.ActiveFlowTypeExtended;
            }
            case 'ActiveTask:partOf': {
                return exports.ActiveTask;
            }
            case 'ActiveTaskTypeExtendedRef:type': {
                return exports.ActiveTaskTypeExtended;
            }
            case 'ActorTypeExtendedRef:type': {
                return exports.ActorTypeExtended;
            }
            case 'ChildDataEntity:child':
            case 'Data:type':
            case 'DataEntity:super':
            case 'DataEntityCluster:main':
            case 'ForeignKey:targetEntity':
            case 'ManyToMany:targetEntity':
            case 'ManyToMany:throughEntity':
            case 'RefDataEntity:refDataEntity': {
                return exports.DataEntity;
            }
            case 'Context:actors':
            case 'ContextDimensionActor:super':
            case 'RefActor:refs':
            case 'UseCase:actorInitiates': {
                return exports.ContextDimensionActor;
            }
            case 'Context:devices': {
                return exports.ContextDimensionDevice;
            }
            case 'Context:sensors': {
                return exports.ContextDimensionSensor;
            }
            case 'ContextDimensionDeviceTypeExtendedRef:type': {
                return exports.ContextDimensionDeviceTypeExtended;
            }
            case 'ContextDimensionSensorTypeExtendedRef:type': {
                return exports.ContextDimensionSensorTypeExtended;
            }
            case 'DataAttributeRefs:attributeRef':
            case 'DataAttributeRefsList:attributeRef':
            case 'DataEntityConstraint:showAsAttribute':
            case 'DetailsFormula:attr':
            case 'ForeignKey:showAsField':
            case 'ForeignKey:toField':
            case 'ManyToMany:throughSourceField':
            case 'ManyToMany:throughTargetField':
            case 'UIComponent:orderBy':
            case 'UIComponent:rnOrderBy':
            case 'UIComponentPart:dataAttributeBinding':
            case 'UIComponentPart:orderBy':
            case 'Variable:value': {
                return exports.DataAttribute;
            }
            case 'DataAttributeTypeExtendedRef:type': {
                return exports.DataAttributeTypeExtended;
            }
            case 'DataEntityClusterTypeExtendedRef:type': {
                return exports.DataEntityClusterTypeExtended;
            }
            case 'DataEntitySubTypeExtendedRef:type': {
                return exports.DataEntitySubTypeExtended;
            }
            case 'DataEntityTypeExtendedRef:type': {
                return exports.DataEntityTypeExtended;
            }
            case 'DataEnumerationRef:type': {
                return exports.DataEnumeration;
            }
            case 'DetailsFormula:dataEntity':
            case 'UIComponent:dataEntity':
            case 'UIComponent:rnDataEntity':
            case 'UIComponentPart:dataEntity':
            case 'UseCase:dataEntity': {
                return exports.DataEntityGeneric;
            }
            case 'ForeignKeyOnDeleteTypeExtendedRef:type': {
                return exports.ForeignKeyOnDeleteTypeExtended;
            }
            case 'IncludeAll:system':
            case 'IncludeElement:system':
            case 'RefSystems:refs':
            case 'System:partOf':
            case 'System:sut': {
                return exports.System;
            }
            case 'IncludeElement:element': {
                return exports.SystemElement;
            }
            case 'MetricTypeExtendedRef:type': {
                return exports.MetricTypeExtended;
            }
            case 'NetworkConnectivityTypeExtendedRef:type': {
                return exports.NetworkConnectivityTypeExtended;
            }
            case 'RefActiveElement:refActiveElement': {
                return exports.ActiveElement;
            }
            case 'RefFlowTo:refFlowTo': {
                return exports.FlowElement;
            }
            case 'RefUC:refs':
            case 'UCExtends:usecase': {
                return exports.UseCase;
            }
            case 'ScreenSizeCategoryTypeExtendedRef:type': {
                return exports.ScreenSizeCategoryTypeExtended;
            }
            case 'SensorStatusTypeExtendedRef:type': {
                return exports.SensorStatusTypeExtended;
            }
            case 'StereotypeTypeExtendedRef:type': {
                return exports.StereotypeTypeExtended;
            }
            case 'SystemSubTypeExtendedRef:type': {
                return exports.SystemSubTypeExtended;
            }
            case 'SystemTypeExtendedRef:type': {
                return exports.SystemTypeExtended;
            }
            case 'UCExtends:extensionPoint': {
                return exports.UCExtensionPoint;
            }
            case 'UIActionEventTypeExtendedRef:type': {
                return exports.UIActionEventTypeExtended;
            }
            case 'UIActionTypeExtendedRef:type': {
                return exports.UIActionTypeExtended;
            }
            case 'UIComponent:dataFlowTos':
            case 'UIComponentRef:ref': {
                return exports.UIComponent;
            }
            case 'UIComponentPartSubTypeExtendedRef:type': {
                return exports.UIComponentPartSubTypeExtended;
            }
            case 'UIComponentPartTypeExtendedRef:type': {
                return exports.UIComponentPartTypeExtended;
            }
            case 'UIComponentSubTypeExtendedRef:type': {
                return exports.UIComponentSubTypeExtended;
            }
            case 'UIComponentTypeExtendedRef:type': {
                return exports.UIComponentTypeExtended;
            }
            case 'UIContainerSubTypeExtendedRef:type': {
                return exports.UIContainerSubTypeExtended;
            }
            case 'UIContainerTypeExtendedRef:type': {
                return exports.UIContainerTypeExtended;
            }
            case 'UIContextExpression:validContext': {
                return exports.Context;
            }
            case 'UIElementEventSubTypeExtendedRef:type': {
                return exports.UIElementEventSubTypeExtended;
            }
            case 'UIElementEventTypeExtendedRef:type': {
                return exports.UIElementEventTypeExtended;
            }
            case 'UIPortDefinitionTypeExtendedRef:type': {
                return exports.UIPortDefinitionTypeExtended;
            }
            case 'UISystemEventTypeExtendedRef:type': {
                return exports.UISystemEventTypeExtended;
            }
            case 'UIThrowingEventTypeExtendedRef:type': {
                return exports.UIThrowingEventTypeExtended;
            }
            case 'UIWireframeTypeExtendedRef:type': {
                return exports.UIWireframeTypeExtended;
            }
            case 'UseCaseTypeExtendedRef:type': {
                return exports.UseCaseTypeExtended;
            }
            case 'UserActivityStatusTypeExtendedRef:type': {
                return exports.UserActivityStatusTypeExtended;
            }
            default: {
                throw new Error(`${referenceId} is not a valid reference id.`);
            }
        }
    }
    getTypeMetaData(type) {
        switch (type) {
            case '_Function': {
                return {
                    name: '_Function',
                    mandatory: [
                        { name: 'params', type: 'array' }
                    ]
                };
            }
            case 'ActiveEvent': {
                return {
                    name: 'ActiveEvent',
                    mandatory: [
                        { name: 'isFinal', type: 'boolean' },
                        { name: 'isInitial', type: 'boolean' },
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'ActiveFlow': {
                return {
                    name: 'ActiveFlow',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'ActiveTask': {
                return {
                    name: 'ActiveTask',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'Context': {
                return {
                    name: 'Context',
                    mandatory: [
                        { name: 'actors', type: 'array' },
                        { name: 'devices', type: 'array' },
                        { name: 'sensors', type: 'array' },
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'ContextDimensionActor': {
                return {
                    name: 'ContextDimensionActor',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'ContextDimensionDevice': {
                return {
                    name: 'ContextDimensionDevice',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'ContextDimensionSensor': {
                return {
                    name: 'ContextDimensionSensor',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'ContextVariable': {
                return {
                    name: 'ContextVariable',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'Data': {
                return {
                    name: 'Data',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'DataAttribute': {
                return {
                    name: 'DataAttribute',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'DataAttributeConstraint': {
                return {
                    name: 'DataAttributeConstraint',
                    mandatory: [
                        { name: 'checks', type: 'array' }
                    ]
                };
            }
            case 'DataAttributeRefs': {
                return {
                    name: 'DataAttributeRefs',
                    mandatory: [
                        { name: 'attributeRef', type: 'array' }
                    ]
                };
            }
            case 'DataAttributeRefsList': {
                return {
                    name: 'DataAttributeRefsList',
                    mandatory: [
                        { name: 'attributeRef', type: 'array' }
                    ]
                };
            }
            case 'DataAttributeTableRow': {
                return {
                    name: 'DataAttributeTableRow',
                    mandatory: [
                        { name: 'attributeValues', type: 'array' }
                    ]
                };
            }
            case 'DataAttributeValues': {
                return {
                    name: 'DataAttributeValues',
                    mandatory: [
                        { name: 'tableRows', type: 'array' }
                    ]
                };
            }
            case 'DataEntity': {
                return {
                    name: 'DataEntity',
                    mandatory: [
                        { name: 'attributes', type: 'array' },
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'DataEntityCluster': {
                return {
                    name: 'DataEntityCluster',
                    mandatory: [
                        { name: 'children', type: 'array' },
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'DataEntityConstraint': {
                return {
                    name: 'DataEntityConstraint',
                    mandatory: [
                        { name: 'checks', type: 'array' }
                    ]
                };
            }
            case 'DataEnumeration': {
                return {
                    name: 'DataEnumeration',
                    mandatory: [
                        { name: 'tags', type: 'array' },
                        { name: 'values', type: 'array' }
                    ]
                };
            }
            case 'IncludeAll': {
                return {
                    name: 'IncludeAll',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'IncludeElement': {
                return {
                    name: 'IncludeElement',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'Membership': {
                return {
                    name: 'Membership',
                    mandatory: [
                        { name: 'right', type: 'array' }
                    ]
                };
            }
            case 'Model': {
                return {
                    name: 'Model',
                    mandatory: [
                        { name: 'packages', type: 'array' }
                    ]
                };
            }
            case 'PackageSystem': {
                return {
                    name: 'PackageSystem',
                    mandatory: [
                        { name: 'imports', type: 'array' }
                    ]
                };
            }
            case 'RefActiveElement': {
                return {
                    name: 'RefActiveElement',
                    mandatory: [
                        { name: 'refActiveElement', type: 'array' }
                    ]
                };
            }
            case 'RefActor': {
                return {
                    name: 'RefActor',
                    mandatory: [
                        { name: 'refs', type: 'array' }
                    ]
                };
            }
            case 'RefDataEntity': {
                return {
                    name: 'RefDataEntity',
                    mandatory: [
                        { name: 'refDataEntity', type: 'array' }
                    ]
                };
            }
            case 'RefFlowTo': {
                return {
                    name: 'RefFlowTo',
                    mandatory: [
                        { name: 'parameterBindingGroup', type: 'array' },
                        { name: 'refFlowTo', type: 'array' }
                    ]
                };
            }
            case 'RefSystems': {
                return {
                    name: 'RefSystems',
                    mandatory: [
                        { name: 'refs', type: 'array' }
                    ]
                };
            }
            case 'RefUC': {
                return {
                    name: 'RefUC',
                    mandatory: [
                        { name: 'refs', type: 'array' }
                    ]
                };
            }
            case 'Stereotype': {
                return {
                    name: 'Stereotype',
                    mandatory: [
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'System': {
                return {
                    name: 'System',
                    mandatory: [
                        { name: 'isFinal', type: 'boolean' },
                        { name: 'isReusable', type: 'boolean' },
                        { name: 'isTestSuite', type: 'boolean' },
                        { name: 'systemConcepts', type: 'array' },
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            case 'UCActions': {
                return {
                    name: 'UCActions',
                    mandatory: [
                        { name: 'actions', type: 'array' }
                    ]
                };
            }
            case 'UCExtensionPoints': {
                return {
                    name: 'UCExtensionPoints',
                    mandatory: [
                        { name: 'extensionPoints', type: 'array' }
                    ]
                };
            }
            case 'UCIncludes': {
                return {
                    name: 'UCIncludes',
                    mandatory: [
                        { name: 'includes', type: 'array' }
                    ]
                };
            }
            case 'UIAction': {
                return {
                    name: 'UIAction',
                    mandatory: [
                        { name: 'tags', type: 'array' },
                        { name: 'uiActionEvents', type: 'array' },
                        { name: 'uiParameters', type: 'array' }
                    ]
                };
            }
            case 'UIActionEvent': {
                return {
                    name: 'UIActionEvent',
                    mandatory: [
                        { name: 'tags', type: 'array' },
                        { name: 'uiParameters', type: 'array' }
                    ]
                };
            }
            case 'UIComponent': {
                return {
                    name: 'UIComponent',
                    mandatory: [
                        { name: 'dataFlowTos', type: 'array' },
                        { name: 'dataParameterBindingGroups', type: 'array' },
                        { name: 'isActive', type: 'boolean' },
                        { name: 'isScrollable', type: 'boolean' },
                        { name: 'isSlider', type: 'boolean' },
                        { name: 'tags', type: 'array' },
                        { name: 'uiComponentParts', type: 'array' },
                        { name: 'uiElementEvents', type: 'array' },
                        { name: 'uiParameters', type: 'array' }
                    ]
                };
            }
            case 'UIComponentPart': {
                return {
                    name: 'UIComponentPart',
                    mandatory: [
                        { name: 'isHidden', type: 'boolean' },
                        { name: 'isReadOnly', type: 'boolean' },
                        { name: 'tags', type: 'array' },
                        { name: 'uiComponentParts', type: 'array' },
                        { name: 'uiElementEvents', type: 'array' }
                    ]
                };
            }
            case 'UIContainer': {
                return {
                    name: 'UIContainer',
                    mandatory: [
                        { name: 'isDefault', type: 'boolean' },
                        { name: 'isLandmark', type: 'boolean' },
                        { name: 'isXOR', type: 'boolean' },
                        { name: 'tags', type: 'array' },
                        { name: 'uiActions', type: 'array' },
                        { name: 'uiElementEvents', type: 'array' },
                        { name: 'uiElements', type: 'array' },
                        { name: 'uiParameters', type: 'array' }
                    ]
                };
            }
            case 'UIElementEvent': {
                return {
                    name: 'UIElementEvent',
                    mandatory: [
                        { name: 'activationExpression', type: 'array' },
                        { name: 'interactionFlowExpression', type: 'array' },
                        { name: 'tags', type: 'array' },
                        { name: 'uiParameters', type: 'array' }
                    ]
                };
            }
            case 'UIParameterBindingGroup': {
                return {
                    name: 'UIParameterBindingGroup',
                    mandatory: [
                        { name: 'uiParameterBindings', type: 'array' }
                    ]
                };
            }
            case 'UIPortDefinition': {
                return {
                    name: 'UIPortDefinition',
                    mandatory: [
                        { name: 'tags', type: 'array' },
                        { name: 'uiParameters', type: 'array' }
                    ]
                };
            }
            case 'UISystemEvent': {
                return {
                    name: 'UISystemEvent',
                    mandatory: [
                        { name: 'tags', type: 'array' },
                        { name: 'triggeringExpressions', type: 'array' },
                        { name: 'uiParameters', type: 'array' }
                    ]
                };
            }
            case 'UIThrowingEvent': {
                return {
                    name: 'UIThrowingEvent',
                    mandatory: [
                        { name: 'tags', type: 'array' },
                        { name: 'uiParameters', type: 'array' }
                    ]
                };
            }
            case 'UpdateFields': {
                return {
                    name: 'UpdateFields',
                    mandatory: [
                        { name: 'updateFields', type: 'array' }
                    ]
                };
            }
            case 'UseCase': {
                return {
                    name: 'UseCase',
                    mandatory: [
                        { name: 'actorParticipates', type: 'array' },
                        { name: 'extends', type: 'array' },
                        { name: 'isAbstract', type: 'boolean' },
                        { name: 'isConcrete', type: 'boolean' },
                        { name: 'isNegative', type: 'boolean' },
                        { name: 'isPositive', type: 'boolean' },
                        { name: 'isProblem', type: 'boolean' },
                        { name: 'isSolution', type: 'boolean' },
                        { name: 'tags', type: 'array' }
                    ]
                };
            }
            default: {
                return {
                    name: type,
                    mandatory: []
                };
            }
        }
    }
}
exports.AslAstReflection = AslAstReflection;
exports.reflection = new AslAstReflection();
//# sourceMappingURL=ast.js.map